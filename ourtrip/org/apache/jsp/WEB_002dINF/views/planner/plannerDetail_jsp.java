/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-04-02 08:02:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.planner;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class plannerDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:substring", org.apache.taglibs.standard.functions.Functions.class, "substring", new Class[] {java.lang.String.class, int.class, int.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1582164453995L));
    _jspx_dependants.put("jar:file:/C:/workspace/Git/ourtrip/ourtrip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/workspace/Git/ourtrip/ourtrip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang = \"ko\">\r\n");
      out.write("    <html lang = \"ko\">\r\n");
      out.write("    <head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    \t\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" \r\n");
      out.write("        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n");
      out.write("        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"  \r\n");
      out.write("        integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"  crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" \r\n");
      out.write("        integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" \r\n");
      out.write("        integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <!-- style -->\r\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/slick.css\"/>\r\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/planner.css\"/>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 호환성 -->\r\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\r\n");
      out.write("        <!-- javascript lib -->\r\n");
      out.write("        <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/slick.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("        <!-- 폰트 -->\r\n");
      out.write("        <link href=\"https://fonts.googleapis.com/css?family=Nanum+Pen+Script|Ubuntu&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("        <!-- 공용 css -->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/common.css\" />\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- kakao map sdk -->\r\n");
      out.write("\t\t<script src=\"//developers.kakao.com/sdk/js/kakao.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\"\r\n");
      out.write("\t\t\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=3265d67cbccb2a931046b989ef45ad5f&libraries=services,clusterer,drawing\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("        <title> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plannerInfo.plannerTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </title>\r\n");
      out.write("        <style>\r\n");
      out.write("            /* div{\r\n");
      out.write("                border:1px dotted black;\r\n");
      out.write("            } */\r\n");
      out.write("            \r\n");
      out.write("            .dayMap{\r\n");
      out.write("            \twidth:100%; \r\n");
      out.write("            \theight: 350px; \r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .card-header{\r\n");
      out.write("                border-top-right-radius: 5px;\r\n");
      out.write("                border-top-left-radius: 5px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .scheduleInfo{\r\n");
      out.write("            \tborder: 2px solid lightgray;\r\n");
      out.write("                border-top: 2px solid #18a8f1;\r\n");
      out.write("            \tborder-left: 0px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .card-body{\r\n");
      out.write("                border: 2px solid lightgray;\r\n");
      out.write("                border-top: 2px solid #18a8f1;\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("            .card-body::-webkit-scrollbar {\r\n");
      out.write("\t\t\t    width: 5px;\r\n");
      out.write("\t\t\t    background-color: none;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.card-body::-webkit-scrollbar-thumb {\r\n");
      out.write("\t\t\t    width: 5px;\r\n");
      out.write("\t\t\t    border-radius: 15px;\r\n");
      out.write("\t\t\t    background-color: rgba(0, 0, 0, 0.15);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.card-body::-webkit-scrollbar-track {\r\n");
      out.write("\t\t\t    width: 5px;\r\n");
      out.write("\t\t\t    background-color: none;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("            .scheduleInfo::-webkit-scrollbar {\r\n");
      out.write("\t\t\t    width: 5px;\r\n");
      out.write("\t\t\t    background-color: none;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.scheduleInfo::-webkit-scrollbar-thumb {\r\n");
      out.write("\t\t\t    width: 5px;\r\n");
      out.write("\t\t\t    border-radius: 15px;\r\n");
      out.write("\t\t\t    background-color: rgba(0, 0, 0, 0.15);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.scheduleInfo::-webkit-scrollbar-track {\r\n");
      out.write("\t\t\t    width: 5px;\r\n");
      out.write("\t\t\t    background-color: none;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("            \r\n");
      out.write("            .card-footer{\r\n");
      out.write("                border: 2px solid lightgray;\r\n");
      out.write("                border-top:none;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            div:focus {\r\n");
      out.write("                outline: none;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* 슬라이더 크기 */\r\n");
      out.write("            /* 높이설정 */\r\n");
      out.write("            .slick-slider{\r\n");
      out.write("                height:800px;\r\n");
      out.write("            }\r\n");
      out.write("            /* 넓이 설정 */\r\n");
      out.write("            /* .slider-wrapper{\r\n");
      out.write("                width:100%\r\n");
      out.write("            } */\r\n");
      out.write("\r\n");
      out.write("            /* 슬라이더 내용크기 */\r\n");
      out.write("            .slick-list{\r\n");
      out.write("                height:100%;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            /* 내용크기 + 드래그범위 */\r\n");
      out.write("            .slick-track{\r\n");
      out.write("                height:100%!important;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            .slick-slide{\r\n");
      out.write("                border:0px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            @media screen and (max-width: 414px) {\r\n");
      out.write("                /* .body div {\r\n");
      out.write("                    border:none;\r\n");
      out.write("                } */\r\n");
      out.write("\r\n");
      out.write("                .container{\r\n");
      out.write("                    padding:0px;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                .slick-slider{\r\n");
      out.write("                    width:100%;\r\n");
      out.write("                    height:100%;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                .slider-wrapper{\r\n");
      out.write("                    width:100%;\r\n");
      out.write("                    height:100%;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                .header{\r\n");
      out.write("                    display: none;\r\n");
      out.write("                }\r\n");
      out.write("                /* 할거 아래 푸터지우기 */\r\n");
      out.write("                /* .card-footer{\r\n");
      out.write("                    display: none!important;\r\n");
      out.write("                } */\r\n");
      out.write("            } \r\n");
      out.write("\r\n");
      out.write("            .p-cont{\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            display: block;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .applyFont{\r\n");
      out.write("                font-family: 'Ubuntu', sans-serif;\r\n");
      out.write("                font-family: 'Nanum Pen Script', cursive;\r\n");
      out.write("                font-size: 24px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("    \t<div class=\"header\">\r\n");
      out.write("\t       \t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/nav.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        <div class=\"container-fluid mb-5 mt-5 applyFont\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-2\"></div>\r\n");
      out.write("\t\t        <h2 class=\"card-header main-back col-md-8\" style=\"height:70px;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plannerInfo.plannerTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h2>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"row\">\r\n");
      out.write("\t        \t<div class=\"col-md-2\"></div>\r\n");
      out.write("\t            <!-- 이미지 슬라이드 -->\r\n");
      out.write("\t            <div class=\"col-md-3\">\r\n");
      out.write("\t            \t<div class=\"row\">\r\n");
      out.write("\t\t\t            <div class=\"slider-wrapper col-md-12 pl-0 pr-0\">\r\n");
      out.write("\t\t\t                <div class=\"slider\">\r\n");
      out.write("\t\t\t                ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t                </div>\r\n");
      out.write("\t\t\t            </div>\r\n");
      out.write("\t\t            </div>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t            <div class=\"col-md-3 p-4 scheduleInfo PCOnly\" style=\"overflow:auto; height:800px\">\r\n");
      out.write("                    <h1 class=\"mb-4 selectTitle\">제목:</h1>\r\n");
      out.write("                    <h2 class=\"mb-3 selectTime\">시간 :</h2>\r\n");
      out.write("                    <h3 class=\"mb-3 selectLocation\">장소 :</h3>\r\n");
      out.write("                    <h3 class=\"mb-3 selectCost\">경비 :</h3>\r\n");
      out.write("                    <h3 class=\"mb-3\">메모</h3>\r\n");
      out.write("                    <textarea class=\"selectMemo\" readonly style=\"height:200px; width: 400px; resize: none; padding: 20px;\" >\r\n");
      out.write("\r\n");
      out.write("                    </textarea>\r\n");
      out.write("                    <h3>위치</h3>\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"dayMap\" id=\"PCMap\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-md-2 p-2 scheduleInfo PCOnly\">\r\n");
      out.write("                \t<a href=\"https://www.hotelscombined.co.kr\" target=\"_blank\">\r\n");
      out.write("                \t\t<img alt=\"광고 배너\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/hotelAds.jpg\"\r\n");
      out.write("                \t\t\tstyle=\"width:100%; height:50%;\">\r\n");
      out.write("                \t</a>\r\n");
      out.write("                \t<a href=\"http://eurecar-lotterentcar.com\" target=\"_blank\">\r\n");
      out.write("                \t\t<img alt=\"광고 배너\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/carAds.jpg\"\r\n");
      out.write("                \t\t\tstyle=\"width:100%; height:50%;\">\r\n");
      out.write("                \t</a>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div> \r\n");
      out.write("\t        <!-- slider wrapper 끝 -->\r\n");
      out.write("\t        <div class=\"row\">\r\n");
      out.write("\t        \t<div class=\"col-md-2\"></div>\r\n");
      out.write("\t        \t<div class=\"card-footer text-muted d-flex hideCon col-md-8\" style=\"height:70px;\">\r\n");
      out.write("\t        \t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t            <button type=\"button\" class=\"btn gray-btn ml-auto PCOnly\" id=\"beforeBtn\">이전으로</button>\r\n");
      out.write("\t\t\t    </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        <!-- 모달창 -->\r\n");
      out.write("        <div class=\"modal mobileOnly applyFont\" id=\"myModal\">\r\n");
      out.write("            <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("                <div class=\"modal-content\">\r\n");
      out.write("                    <div class=\"modal-header main-back\">\r\n");
      out.write("                        <h1 class=\"modal-title font-weight-bold selectTitle\">DAY - 1</h1>\r\n");
      out.write("                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                            <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-body\">\r\n");
      out.write("\t                    <h2 class=\"mb-3 selectTime\">시간 :</h2>\r\n");
      out.write("\t                    <h3 class=\"mb-3 selectLocation\">장소 :</h3>\r\n");
      out.write("\t                    <h3 class=\"mb-3 selectCost\">경비 :</h3>\r\n");
      out.write("\t                    <h3 class=\"mb-3\">메모</h3>\r\n");
      out.write("\t                    <textarea class=\"selectMemo\" readonly style=\"height:200px; width: 400px; resize: none; padding: 20px;\" >\r\n");
      out.write("\t\r\n");
      out.write("\t                    </textarea>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-footer\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-primary\" \r\n");
      out.write("                        data-dismiss=\"modal\">되돌아가기</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"header\">\r\n");
      out.write("\t    \t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t    </div>\r\n");
      out.write("    </body>\r\n");
      out.write("    <!-- 지도관련 javascript -->\r\n");
      out.write("   \t<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/map.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("    var planner = new Object();\r\n");
      out.write("    var days = new Array();\r\n");
      out.write("    var mapId = null;\r\n");
      out.write("    var scheduleMarkers = new Array();\r\n");
      out.write("    var locationJson = null;\r\n");
      out.write("    var locationArray = new Array();\r\n");
      out.write("    var scheduleMarkers = new Array();\r\n");
      out.write("    var mapArray = new Array();\r\n");
      out.write("    var selectMap = null;\r\n");
      out.write("    var marker = new kakao.maps.Marker();\r\n");
      out.write("\tvar infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n");
      out.write("\tvar infowindowLocal = new kakao.maps.InfoWindow({\r\n");
      out.write("        removable : true\r\n");
      out.write("    });\r\n");
      out.write("\t\r\n");
      out.write("    $(function(){\r\n");
      out.write("    \tvar plannerInfo = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plannerInfoJson}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("    \tvar plannerJson = JSON.parse(plannerInfo);\r\n");
      out.write("    \tlocationJson = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${locationArray}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("    \tinitPlanner(plannerJson);\r\n");
      out.write("    \tinitMap();\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#copyBtn').click(function(){\r\n");
      out.write("    \tlocation.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/planner/plannerCopy?no=\"+planner.no;\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#beforeBtn').click(function(){\r\n");
      out.write("    \twindow.history.go(-1);\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    function initMap(){\r\n");
      out.write("    \t\r\n");
      out.write("    \tvar loadingInfo = 0;\r\n");
      out.write("    \tvar loadingAddr = 0;\r\n");
      out.write("    \t\r\n");
      out.write("    \tfor(var i in locationJson){\r\n");
      out.write("    \t\tvar scheduleMarker = new Array();\r\n");
      out.write("    \t\tvar dayMarker = new Object();\r\n");
      out.write("    \t\tdayMarker.dno = locationJson[i].dno;\r\n");
      out.write("    \t\tdayMarker.markers = [];\r\n");
      out.write("    \t\tfor(var j in locationJson[i].schedules){\r\n");
      out.write("    \t\t\tvar sm = new Object();\r\n");
      out.write("    \t\t\tsm.sno = locationJson[i].schedules[j].sno;\r\n");
      out.write("    \t\t\tsm.LatLng = new kakao.maps.LatLng(locationJson[i].schedules[j].lat, locationJson[i].schedules[j].lng);\r\n");
      out.write("    \t\t\tsm.unselect = (parseInt(locationJson[i].schedules[j].lat,10) + parseInt(locationJson[i].schedules[j].lng,10)) == 0 ? true:false;\r\n");
      out.write("    \t\t\tsm.location = locationJson[i].schedules[j].location;\r\n");
      out.write("    \t\t\tsm.infoWindow = null;\r\n");
      out.write("    \t\t\tscheduleMarker.push(sm);\r\n");
      out.write("    \t\t\tloadingInfo++;\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t\tdayMarker.scheduleMarker = scheduleMarker;\r\n");
      out.write("    \t\tscheduleMarkers.push(dayMarker);\r\n");
      out.write("    \t}\r\n");
      out.write("    \t\r\n");
      out.write("    \tfor(var d in scheduleMarkers){\r\n");
      out.write("    \t\tfor(var s in scheduleMarkers[d].scheduleMarker){\r\n");
      out.write("\t\t    \tgetScheduleAddr(scheduleMarkers[d].scheduleMarker[s].LatLng,scheduleMarkers[d].scheduleMarker[s].location,scheduleMarkers[d].scheduleMarker[s].sno).then(function(args){\r\n");
      out.write("\t\t\t\t\tfor(var i in scheduleMarkers){\r\n");
      out.write("\t\t\t\t\t\tfor(var j in scheduleMarkers[i].scheduleMarker){\r\n");
      out.write("\t\t\t\t\t\t\tif(scheduleMarkers[i].scheduleMarker[j].sno == args[0]){\r\n");
      out.write("\t\t\t\t\t\t\t\tscheduleMarkers[i].scheduleMarker[j].infoWindow = args[1];\r\n");
      out.write("\t\t\t\t\t\t\t\tloadingAddr += 1;\r\n");
      out.write("\t\t\t\t\t\t\t\tif(loadingInfo == loadingAddr){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor(var i in scheduleMarkers){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar mapDiv = document.getElementById(locationJson[i].dno+''); \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tscheduleMarkers[i].map = new kakao.maps.Map(mapDiv, mapOption);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor(var i in scheduleMarkers){\r\n");
      out.write("\t\t\t\t\t\t\t    \t\tdisplayAllPlaces(scheduleMarkers[i],scheduleMarkers[i].map,scheduleMarkers[i].markers,infowindowLocal);\r\n");
      out.write("\t\t\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t}\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function initPlanner(pj){\r\n");
      out.write("    \tplanner.no = pj.plannerNo;\r\n");
      out.write("    \tplanner.title = pj.plannerTitle;\r\n");
      out.write("    \tplanner.pwd = pj.plannerPwd;\r\n");
      out.write("    \tplanner.cost = pj.plannerCost;\r\n");
      out.write("    \tplanner.createDT = pj.plannerCreateDT;\r\n");
      out.write("    \tplanner.modifyDT = pj.plannerModifyDT;\r\n");
      out.write("    \tplanner.startDT = pj.plannerStartDT;\r\n");
      out.write("    \tplanner.publicYN = pj.plannerPublicYN;\r\n");
      out.write("    \tplanner.deleteYN = pj.plannerDeleteYN;\r\n");
      out.write("    \tplanner.expiry = pj.plannerExpiry;\r\n");
      out.write("    \tplanner.count = pj.plannerCount;\r\n");
      out.write("    \tplanner.url = pj.plannerUrl;\r\n");
      out.write("    \tplanner.groupCode = pj.groupCode;\r\n");
      out.write("    \tfor(var d in pj.days){\r\n");
      out.write("    \t\tvar day = new Object();\r\n");
      out.write("    \t\tday.no = pj.days[d].dateNo;\r\n");
      out.write("    \t\tday.tripDate = pj.days[d].tripDate;\r\n");
      out.write("    \t\tday.plannerNo = planner.no;\r\n");
      out.write("    \t\tday.schedules = new Array();\r\n");
      out.write("    \t\tfor(var s in pj.days[d].schedules){\r\n");
      out.write("    \t\t\tvar schedule = new Object();\r\n");
      out.write("    \t\t\tschedule.no = pj.days[d].schedules[s].scheduleNo;\r\n");
      out.write("    \t\t\tschedule.title = pj.days[d].schedules[s].scheduleTitle;\r\n");
      out.write("    \t\t\tschedule.cost = pj.days[d].schedules[s].scheduleCost;\r\n");
      out.write("    \t\t\tschedule.time = pj.days[d].schedules[s].scheduleTime;\r\n");
      out.write("    \t\t\tschedule.memo = pj.days[d].schedules[s].scheduleMemo;\r\n");
      out.write("    \t\t\tschedule.locationNM = pj.days[d].schedules[s].scheduleLocationNM;\r\n");
      out.write("    \t\t\tschedule.lat = pj.days[d].schedules[s].scheduleLat;\r\n");
      out.write("    \t\t\tschedule.lng = pj.days[d].schedules[s].scheduleLng;\r\n");
      out.write("    \t\t\tschedule.infoWindow = pj.days[d].schedules[s].infoWindow;\r\n");
      out.write("    \t\t\tschedule.dateNo = pj.days[d].dateNo;\r\n");
      out.write("    \t\t\tday.schedules.push(schedule);\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t\tdays.push(day);\r\n");
      out.write("    \t}\r\n");
      out.write("    \tconsole.log(\"planner\");\r\n");
      out.write("    \tconsole.log(planner);\r\n");
      out.write("    \tconsole.log(\"days\");\r\n");
      out.write("    \tconsole.log(days);\r\n");
      out.write("    \tconsole.log(days);\r\n");
      out.write("    \tconsole.log(\"scheduleMarkers\");\r\n");
      out.write("    \tconsole.log(scheduleMarkers);\r\n");
      out.write("    \t\r\n");
      out.write("    \tselectMapContainer = document.getElementById(\"PCMap\");\r\n");
      out.write("    \tselectMap = new kakao.maps.Map(selectMapContainer, mapOption);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function getScheduleAddr(templocation,locationName,scheduleNo){\r\n");
      out.write("    \tif(templocation.getLng() + templocation.getLat() != 0){\r\n");
      out.write("    \t\treturn new Promise(function(resolve, reject){\r\n");
      out.write("    \t\t\ttry{\r\n");
      out.write("    \t\t\t\tvar contentArr= new Array();\r\n");
      out.write("    \t\t\t\tcontentArr.push(scheduleNo);\r\n");
      out.write("    \t\t\t\tsearchDetailAddrFromCoords(templocation, function(result, status) {\r\n");
      out.write("    \t\t\t\t    if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("    \t\t\t\t        var detailAddr = !!result[0].road_address ? '<div style=\"font-size: 14px;\">도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';\r\n");
      out.write("    \t\t\t\t        detailAddr += '<div style=\"font-size: 14px;\">지번 주소 : ' + result[0].address.address_name + '</div>';\r\n");
      out.write("    \t\t\t\t        \r\n");
      out.write("    \t\t\t        \tcontent = \t'<div class=\"bAddr\">' +\r\n");
      out.write("    \t\t\t\t                        '<span class=\"title\">' + locationName + '</span>' + \r\n");
      out.write("    \t\t\t\t                        detailAddr + \r\n");
      out.write("    \t\t\t                        '</div>';\r\n");
      out.write("    \t\t\t\t      \tcontentArr.push(content);\r\n");
      out.write("    \t\t\t\t        resolve(contentArr);\r\n");
      out.write("    \t\t\t\t    }else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n");
      out.write("    \t\t\t\t        // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n");
      out.write("    \t\t\t\t\t    content = \r\n");
      out.write("    \t\t\t\t\t    \t'<div class=\"bAddr\">' +\r\n");
      out.write("    \t\t                        '<span class=\"title\">' + locationName + '</span>' + \r\n");
      out.write("    \t\t                    '</div>';\r\n");
      out.write("    \t\t\t\t\t    contentArr.push(content);\r\n");
      out.write("    \t\t\t\t        resolve(contentArr);\r\n");
      out.write("    \t\t\t\t    } else if (status === kakao.maps.services.Status.ERROR) {\r\n");
      out.write("    \t\t\t\t        // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n");
      out.write("    \t\t\t\t    \tconsole.log(\"에러로 인해 검색결과가 나오지 않은 경우\");\r\n");
      out.write("    \t\t\t\t    }\r\n");
      out.write("    \t\t\t\t});\r\n");
      out.write("    \t\t\t\t\r\n");
      out.write("    \t\t\t} catch(error){\r\n");
      out.write("    \t\t\t\treject(error)\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t}else{\r\n");
      out.write("    \t\treturn new Promise(function(resolve, reject){\r\n");
      out.write("    \t\t\ttry{\r\n");
      out.write("    \t\t\t\tvar contentArr= new Array();\r\n");
      out.write("    \t\t\t\tcontentArr.push(scheduleNo);\r\n");
      out.write("    \t\t\t\tcontentArr.push(null);\r\n");
      out.write("    \t\t\t\tresolve(contentArr);\r\n");
      out.write("    \t\t\t}catch(error){\r\n");
      out.write("    \t\t\t\tconsole.log(error.stack);\r\n");
      out.write("    \t\t\t\treject(error);\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t}\r\n");
      out.write("    } \r\n");
      out.write("    \r\n");
      out.write("\t// 슬라이더\r\n");
      out.write("\t$(\".slider\").slick({\r\n");
      out.write("\t    // 아래 누르는 버튼\r\n");
      out.write("\t    dots: false,\r\n");
      out.write("\t    autoplay : false,\r\n");
      out.write("\t    autoplaySpeed: 3000,\r\n");
      out.write("\t    arrows: false,\r\n");
      out.write("\t    responsive : [\r\n");
      out.write("\t        {\r\n");
      out.write("\t            breakpoint: 768,\r\n");
      out.write("\t            settings : {\r\n");
      out.write("\t                arrows: false,\r\n");
      out.write("\t                dots : false\r\n");
      out.write("\t            }\r\n");
      out.write("\t        }\r\n");
      out.write("\t    ]\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction isMobile() {\r\n");
      out.write("\t    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif (isMobile()) {\r\n");
      out.write("\t    // 모바일이면 실행될 코드 들어가는 곳\r\n");
      out.write("\t    $('.PCOnly').css('display','none');\r\n");
      out.write("\t} else {\r\n");
      out.write("\t    // 모바일이 아니면 실행될 코드 들어가는 곳\r\n");
      out.write("\t    $('#myModal').attr('id','ModalNone');\r\n");
      out.write("\t    $('.mobileOnly').css('display','none');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$('.schedule').click(function(){\r\n");
      out.write("\t\tfor(var i in days){\r\n");
      out.write("\t\t\tfor(var j in days[i].schedules){\r\n");
      out.write("\t\t\t\tif(days[i].schedules[j].no == $(this).data('sno')){\r\n");
      out.write("\t\t\t\t\tfor(var k = 0; k < $('.selectTitle').length; k++){\r\n");
      out.write("\t\t\t\t\t\t$($('.selectTitle')[k]).html('제목 : ' + days[i].schedules[j].title);\r\n");
      out.write("\t\t\t\t\t\tvar time = \"\"\r\n");
      out.write("\t\t\t\t\t\tif(timeToTime(days[i].schedules[j].time) != 'nu:ll')\r\n");
      out.write("\t\t\t\t\t\t\ttime = timeToTime(days[i].schedules[j].time);\r\n");
      out.write("\t\t\t\t\t\t$($('.selectTime')[k]).html('시간 : ' + time);\r\n");
      out.write("\t\t\t\t\t\t$($('.selectLocation')[k]).html('장소 : ' + days[i].schedules[j].locationNM);\r\n");
      out.write("\t\t\t\t\t\t$($('.selectCost')[k]).html('비용 : ' + days[i].schedules[j].cost);\r\n");
      out.write("\t\t\t\t\t\t$($('.selectMemo')[k]).html(days[i].schedules[j].memo);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(scheduleMarkers[i].scheduleMarker[j].sno == $(this).data('sno')){\r\n");
      out.write("\t\t\t\t\tvar scheduleLocation = scheduleMarkers[i].scheduleMarker[j].LatLng;\r\n");
      out.write("\t\t\t\t\tvar locationContent = scheduleMarkers[i].scheduleMarker[j].infoWindow;\r\n");
      out.write("\t\t\t\t\tif(scheduleLocation.getLat()+scheduleLocation.getLng() == 0){\r\n");
      out.write("\t\t\t\t        marker.setMap(null);\r\n");
      out.write("\t\t\t\t        infowindow.setMap(null);\r\n");
      out.write("\t\t\t\t    }else{\r\n");
      out.write("\t\t\t\t        marker.setMap(selectMap);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t        marker.setPosition(scheduleLocation);\r\n");
      out.write("\t\t\t\t        marker.setMap(selectMap);\r\n");
      out.write("\t\t\t\t        var allBounds = new kakao.maps.LatLngBounds();\r\n");
      out.write("\t\t\t\t        allBounds.extend(scheduleLocation);\r\n");
      out.write("\t\t\t\t     \t\r\n");
      out.write("\t\t\t\t        // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다\r\n");
      out.write("\t\t\t\t        infowindow.setContent(locationContent);\r\n");
      out.write("\t\t\t\t        infowindow.open(selectMap, marker);\r\n");
      out.write("\t\t\t\t        // selectMap.setBounds(allBounds);\r\n");
      out.write("\t\t\t\t        selectMap.setCenter(scheduleLocation);\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction timeToTime(time){\r\n");
      out.write("\t\tvar str = time.replace(/(.{2})/g,\"$1:\").slice(0,-1);\r\n");
      out.write("\t\treturn str;\r\n");
      out.write("\t} \r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/planner/plannerDetail.jsp(187,19) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/planner/plannerDetail.jsp(187,19) '${plannerInfo.days}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${plannerInfo.days}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/planner/plannerDetail.jsp(187,19) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("thisDay");
      // /WEB-INF/views/planner/plannerDetail.jsp(187,19) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t                    <!-- 1-day 시작 -->\r\n");
            out.write("\t\t\t                    <div class=\"card\">\r\n");
            out.write("\t\t\t                        <div class=\"card-body\" style=\"overflow: auto; height:800px;\">\r\n");
            out.write("\t\t\t                            <h1 style=\"color:#18a8f1;\">Day-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${thisDay.tripDate+1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h1>\r\n");
            out.write("\t\t\t                            <hr>\r\n");
            out.write("\t\t\t                            ");
            if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("\t\t\t                           \r\n");
            out.write("\t\t\t\t\t\t            \t<div class=\"dayMap\" id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${thisDay.dateNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("\t\t\t\t\t\t            \t</div>\r\n");
            out.write("\t\t\t                        </div>\r\n");
            out.write("\t\t\t                    </div>\r\n");
            out.write("\t\t\t                    <!-- 1-day 끝 -->\r\n");
            out.write("\t\t\t                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/planner/plannerDetail.jsp(193,31) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/planner/plannerDetail.jsp(193,31) '${thisDay.schedules}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${thisDay.schedules}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/planner/plannerDetail.jsp(193,31) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("thisSchedule");
      // /WEB-INF/views/planner/plannerDetail.jsp(193,31) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVarStatus("vs2");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t                            <div data-sno=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${thisSchedule.scheduleNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"btn p-cont schedule\" data-toggle=\"modal\" data-target=\"#myModal\">\r\n");
            out.write("\t\t\t\t                                <h1 class=\"font-weight-bold\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${thisSchedule.scheduleTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h1>\r\n");
            out.write("\t\t\t\t                                ");
            if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("\t\t\t\t                                <h3>시간 : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(time,0,2)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
            out.write(':');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substring(time,2,4)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
            out.write("</h3>\r\n");
            out.write("\t\t\t\t                                <h2>장소 : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${thisSchedule.scheduleLocationNM}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h2>\r\n");
            out.write("\t\t\t\t                            </div>\r\n");
            out.write("\t\t\t                            \t<hr>\r\n");
            out.write("\t\t\t                            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/planner/plannerDetail.jsp(196,36) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("time");
      // /WEB-INF/views/planner/plannerDetail.jsp(196,36) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/planner/plannerDetail.jsp(196,36) '${thisSchedule.scheduleTime}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${thisSchedule.scheduleTime}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/planner/plannerDetail.jsp(242,10) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t            <button type=\"button\" class=\"btn main-btn mr-auto PCOnly\" id=\"copyBtn\">복사</button>\r\n");
          out.write("\t\t        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
