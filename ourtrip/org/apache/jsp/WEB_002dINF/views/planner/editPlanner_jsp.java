/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-04-02 06:21:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.planner;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class editPlanner_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1582164453995L));
    _jspx_dependants.put("jar:file:/C:/workspace/Git/ourtrip/ourtrip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/workspace/Git/ourtrip/ourtrip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"\r\n");
      out.write("\tintegrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- jQueryCSS -->\r\n");
      out.write("<link href=\"https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<!-- jQueryUI -->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Web socket CDN -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.4.0/sockjs.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- json2.js -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- 아이콘 -->\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/76b49c6d9b.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- 호환성 -->\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\r\n");
      out.write("<!-- 폰트 -->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Nanum+Pen+Script|Ubuntu&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- 공용 css -->\r\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/common.css\"> -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/common.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/planner.css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Web socket CDN -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.4.0/sockjs.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- json2.js -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/json2/20160511/json2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- kakao map sdk -->\r\n");
      out.write("<script src=\"//developers.kakao.com/sdk/js/kakao.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=3265d67cbccb2a931046b989ef45ad5f&libraries=services,clusterer,drawing\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plannerTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/nav.jsp", out, false);
      out.write("\r\n");
      out.write("\t<button type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\"\r\n");
      out.write("\t\tid=\"modalBtn\" style=\"display:none\"></button>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Modal -->\r\n");
      out.write("\t<div class=\"modal noselect fade plannerFont\" id=\"myModal\" role=\"dialog\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t<!-- Modal content-->\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t참여하기\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">×</button>\r\n");
      out.write("\t\t\t\t\t<h4 class=\"modal-title\"></h4>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<p class=\"pwdIsEmpty\">참여하려면 Join 버튼을 누르세요</p>\r\n");
      out.write("\t\t\t\t\t<p class=\"pwdIsnotEmpty\">비밀번호를 입력하세요</p>\r\n");
      out.write("\t\t\t\t\t<input class=\"pwdIsnotEmpty\" type=\"password\" class=\"form-control\" name=\"joinPwd\" id=\"inputPwd\" style=\"border:1px solid lightgray; width:100%\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"ModalBtnCss2\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"goBack();\">돌아가기</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"ModalBtnCss1\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\tid=\"join\">Join</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Modal -->\r\n");
      out.write("\t<div class=\"modal noselect fade plannerFont\" id=\"LocationModal\" role=\"dialog\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t<!-- Modal content-->\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t지역 수정\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">×</button>\r\n");
      out.write("\t\t\t\t\t<h4 class=\"modal-title\"></h4>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row mx-auto\">지역 선택</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"row mb-4\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-5\">\r\n");
      out.write("\t\t\t\t\t\t\t<select name=\"largeArea\" id=\"wide-area\"\tclass=\"custom-select\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-5\">\r\n");
      out.write("\t\t\t\t\t\t\t<select name=\"smallArea\" id=\"local-area\" class=\"custom-select\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"0\" selected>전체</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"custom-select locationUpdateBtn\" id=\"locationAdd\">+</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-12\" id=\"locationList\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"ModalBtnCss2\" data-dismiss=\"modal\" >취소</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"ModalBtnCss1\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\tid=\"updateLocation\">수정</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"modal noselect fade plannerFont\" id=\"GroupModal\" role=\"dialog\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t<!-- Modal content-->\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t그룹 수정\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">×</button>\r\n");
      out.write("\t\t\t\t\t<h4 class=\"modal-title\"></h4>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<select name=\"selectGroup\" class=\"custom-select\" id=\"groupCode\">\r\n");
      out.write("\t\t\t\t\t\t<option value='1'>혼자</option>\r\n");
      out.write("\t\t\t\t\t\t<option value='2'>커플</option>\r\n");
      out.write("\t\t\t\t\t\t<option value='3'>친구</option>\r\n");
      out.write("\t\t\t\t\t\t<option value='4'>가족</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"ModalBtnCss2\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"ModalBtnCss1\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\tid=\"updateGroup\">수정</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"container-fluid pt-5 plannerFont\" style=\"border-top: 1px solid\">\r\n");
      out.write("\t\t<form action=\"#\">\r\n");
      out.write("\t\t\t<div class=\"row noselect mb-3\" id=\"masterOnly\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-10 pr-0\">\r\n");
      out.write("\t\t\t\t\t<div class=\"main-back plannerHeader row ml-0 mr-0\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"updateTitle\" class=\"plannerHeaderBtn btnColor1\">제목 수정</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"updatePassword\" class=\"plannerHeaderBtn btnColor1\">비밀번호 수정</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" data-toggle=\"modal\" data-target=\"#LocationModal\"\r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"updateLocationModal\" class=\"plannerHeaderBtn btnColor1\">지역목록 수정</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" data-toggle=\"modal\" data-target=\"#GroupModal\" \r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"updateGroupModal\" class=\"plannerHeaderBtn btnColor1\">그룹 카테고리 수정</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"updatePublic\" class=\"plannerHeaderBtn btnColor1\">공개 / 비공개 설정</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"clearUserList\" class=\"plannerHeaderBtn btnColor1\">접속자 목록 초기화</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"row noselect\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-4\">\r\n");
      out.write("\t\t\t\t\t<div class=\"main-back plannerHeader row ml-0 mr-0\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-9 pl-2 pr-0\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" id=\"url\" class=\"pl-2\" readonly\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"copy\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"plannerHeaderBtn btnColor1\">복사</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-3 pl-0\">\r\n");
      out.write("\t\t\t\t\t<div class=\"main-back plannerHeader row ml-0 mr-0\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<span>총 경비 : </span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-5 pl-0 pr-0\">\r\n");
      out.write("\t\t\t\t\t\t\t<span id=\"totalcost\">0 원</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"plannerHeaderBtn btnColor1\" id=\"calc\">계산</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-3 pl-0\">\r\n");
      out.write("\t\t\t\t\t<div class=\"main-back plannerHeader row ml-0\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-6 pl-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<select name=\"userPermission\" id=\"userPermission\">\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-3 pl-0\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"plannerHeaderBtn btnColor3\"\r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"stealBtn\">권한 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-3 pl-0\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"plannerHeaderBtn btnColor1\"\r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"grantBtn\">권한 부여</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"row content-size\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 일자 선택창 -->\r\n");
      out.write("\t\t\t\t<div class=\"col-md-1\" id=\"plandays\">\r\n");
      out.write("\t\t\t\t\t<div class=\"divBorder noselect\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<!-- 출발일 설정 -->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"card-header main-back plannerDivHeader dayHeader\">\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"plannerDay\" id=\"startrip\"\ttype=\"date\" max=\"9999-12-31\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btnColor1\" id=\"startDateUpdateBtn\">출발일 수정</button> \r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<!-- 일자 카드 -->\r\n");
      out.write("\t\t\t\t\t\t<div id=\"sortable\" class=\"divContent\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"updateBtns p-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"addDayBtn\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"updateBtn btnColor1\" onclick=\"addDate();\">일차\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"updateBtn btnColor1\" id=\"guide\">이용 방법</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"col-md-3 pl-0\" id=\"inputplanner\">\r\n");
      out.write("\t\t\t\t\t<div class=\"divBorder noselect\" id=\"plannerWraper1\">\r\n");
      out.write("\t\t\t\t\t\t<h2 class=\"card-header main-back plannerDivHeader\">일정 편집</h2>\r\n");
      out.write("\t\t\t\t\t\t<div data-scheduleno=\"0\" class=\"p-3 divContent\" id=\"scheduleInfo\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"inputScheduleTitle\" class=\"mb-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h2>일정제목</h2>\r\n");
      out.write("\t\t\t\t\t\t\t\t</label> <input id=\"inputScheduleTitle\" class=\"form-control mb-4\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"text\" placeholder=\"일정제목을 입력해 주세요\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"font-size: 1.4rem;\" autocomplete=\"off\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"inputScheduleCost\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h2>경비</h2>\r\n");
      out.write("\t\t\t\t\t\t\t\t</label><br> <input id=\"inputScheduleCost\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"tripinfo inputScheduleCost form-control\" type=\"number\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"경비 입력\" style=\"font-size: 1.4rem;\" autocomplete=\"off\"><br>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"inputScheduleTime\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h2>시간</h2>\r\n");
      out.write("\t\t\t\t\t\t\t\t</label><br> <input id=\"inputScheduleTime\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"tripinfo inputScheduleTime form-control\" type=\"time\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"시간 입력\" style=\"font-size: 1.4rem;\" autocomplete=\"off\"><br>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"inputScheduleMemo\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h2>메모</h2>\r\n");
      out.write("\t\t\t\t\t\t\t\t</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<textarea id=\"inputScheduleMemo\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"tripinfo inputScheduleMemo form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"height: 150px; width: 98%; resize: none;\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"font-size: 1.4rem;\" autocomplete=\"off\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"inputScheduleLocationName\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h2>장소</h2>\r\n");
      out.write("\t\t\t\t\t\t\t</label> <input class=\"inputScheduleLocationName form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"inputScheduleLocationName\" type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"장소 이름 입력\" style=\"font-size: 1.4rem;\" autocomplete=\"off\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"inputScheduleLocationArea\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"input-group my-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input class=\"inputScheduleLocation form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tid=\"inputScheduleLocation\" type=\"text\" placeholder=\"장소검색\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 1.4rem;\" onkeypress=\"enterSearch(this);\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button class=\"btn btn-success\" type=\"button\" id=\"search-btn\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tonclick=\"searchKeyword();\">검색</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"maplace\" id=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"btn-wrapper\" class=\"mt-3 d-flex\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"flex-fill\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-primary btn-block reco-btn\">맛집</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"flex-fill mx-3  \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-success btn-block reco-btn\">관광지</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"flex-fill\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-info btn-block reco-btn\">숙소</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"updateBtns p-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"updateBtn btnColor1\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid=\"scheduleUpdate\">저장</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"updateBtn btnColor1\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid=\"addSchedule\">일정 추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"updateBtn btnColor1\" id=\"initMap\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tonclick=\"initMapBtn();\">지도 초기화</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"updateBtn btnColor3\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid=\"removeSchedule\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-3 pl-0\" id=\"complaner\">\r\n");
      out.write("\t\t\t\t\t<div class=\"card divBorder noselect\">\r\n");
      out.write("\t\t\t\t\t\t<h2 data-dateno=\"0\" class=\"card-header main-back plannerDivHeader\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"selectedDay\">n일차</h2>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"card-body divContent p-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"plannerAccodian\" id=\"scheduleList\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"allMapPlace\" style=\"width: 100%; height: 350px;\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- complaner end -->\r\n");
      out.write("\t\t\t\t<div class=\"col-md-3\" id=\"chatpart\"\r\n");
      out.write("\t\t\t\t\tstyle=\"padding: 0px 0px 0px 0px; overflow: hidden;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"divBorder chatBGC\">\r\n");
      out.write("\t\t\t\t\t\t<h2 class=\"card-header main-back plannerDivHeader noselect\">채팅</h2>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"chatarea p-3\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row p-4\" style=\"height: 18%;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-9\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<textarea id=\"mymsg\" class=\"inputMsg\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-3 pl-0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" id=\"send\" class=\"sendBtn\">보내기</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-md-1\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/map.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//페이지 로딩 시 일정 수에 맞게 위치정보 Array에 자리생성\r\n");
      out.write("// 0 = schedule 번호\r\n");
      out.write("// 1 = 카카오 위치 객체\r\n");
      out.write("// 2 = lat + lng\r\n");
      out.write("// 3 = 인포 윈도우\r\n");
      out.write("\r\n");
      out.write("var scheduleMarkers = new Array();\r\n");
      out.write("var planner = new Object();\r\n");
      out.write("var days = new Array();\r\n");
      out.write("var loadingInfo = 0;\r\n");
      out.write("var loadingAddr = 0;\r\n");
      out.write("var dayIndex = -1;\r\n");
      out.write("var memberNo = null;\r\n");
      out.write("var memberNickName = null;\r\n");
      out.write("var permission = null;\r\n");
      out.write("var joinMember = new Array();\r\n");
      out.write("var joinUserJson = null;\r\n");
      out.write("var locationList = new Array();\r\n");
      out.write("\r\n");
      out.write("$(function() {\r\n");
      out.write("\tmemberNo = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\tif(memberNo == ''){\r\n");
      out.write("\t\tmemberNo = '-1';\r\n");
      out.write("\t}\r\n");
      out.write("\tmemberNickName = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNickName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\tif(memberNickName == ''){\r\n");
      out.write("\t\tmemberNickName = '비회원';\r\n");
      out.write("\t}\r\n");
      out.write("\tvar plannerInfo = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${plannerInfo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\tvar chatList = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chatList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\tvar joinUserArray = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${joinUserArray}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\tjoinUserJson = JSON.parse(joinUserArray);\r\n");
      out.write("\tinitJoinMember(joinUserJson);\r\n");
      out.write("\tvar plannerJson = JSON.parse(plannerInfo);\r\n");
      out.write("\tvar chatListJson = JSON.parse(chatList);\r\n");
      out.write("\tvar profilePath = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profilePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\tplanner.pwd = plannerJson.plannerPwd;\r\n");
      out.write("\tif(planner.pwd == '' || planner.pwd == 'null'){\r\n");
      out.write("\t\t$('.pwdIsnotEmpty').each(function(i, item){\r\n");
      out.write("\t\t\t$(item).css('display','none');\r\n");
      out.write("\t\t\tplanner.pwd = '';\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$('.pwdIsEmpty').each(function(i, item){\r\n");
      out.write("\t\t\t$(item).css('display','none');\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$('#url').val(window.location.href);\r\n");
      out.write("\t$('#startrip').val(plannerJson.plannerStartDT);\r\n");
      out.write("\t$(\"#join\").click(function(){\r\n");
      out.write("\t\tvar inputPwd = $('#inputPwd').val();\r\n");
      out.write("\t\tif(planner.pwd == inputPwd){\r\n");
      out.write("\t\t\tinitChatting(chatListJson);\r\n");
      out.write("\t\t\tinitPlanner(plannerJson);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i in joinMember){\r\n");
      out.write("\t\t\t\tif(joinMember[i].memberNo == memberNo){\r\n");
      out.write("\t\t\t\t\tpermission = joinMember[i].plannerPermission;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(permission == 3){\r\n");
      out.write("\t\t\t\t$('#masterOnly').css('display','flex');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert('비밀번호가 틀렸습니다');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar tempList = new Array();\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\tinitLocationList(tempList);\r\n");
      out.write("\t\t$('#totalcost').html(calculator() + '원');\r\n");
      out.write("\t\tvar newJoinUser = {memberNo:memberNo,plannerNo:plannerJson.plannerNo,plannerPermission:permission,memberNickName:memberNickName};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsock.send(JSON.stringify({pno:planner.no, type: 'JOIN', memberNo: memberNo, memberNickName: memberNickName,newJoinUser:newJoinUser}));\r\n");
      out.write("\t})\r\n");
      out.write("\t$('#startrip').val(plannerJson.plannerStartDT);\r\n");
      out.write("    // 페이지 입장 시 참여버튼 모달 출력\r\n");
      out.write("    $('#groupCode option[value=\"' + plannerJson.groupCode + '\"]').attr('selected','true');\r\n");
      out.write("    $(\"#modalBtn\").click();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("var iwContent = '';\r\n");
      out.write("function initPlanner(pj){\r\n");
      out.write("\tplanner.no = pj.plannerNo;\r\n");
      out.write("\tplanner.title = pj.plannerTitle;\r\n");
      out.write("\tplanner.pwd = pj.plannerPwd;\r\n");
      out.write("\tplanner.cost = pj.plannerCost;\r\n");
      out.write("\tplanner.createDT = pj.plannerCreateDT;\r\n");
      out.write("\tplanner.modifyDT = pj.plannerModifyDT;\r\n");
      out.write("\tplanner.startDT = pj.plannerStartDT;\r\n");
      out.write("\tplanner.publicYN = pj.plannerPublicYN;\r\n");
      out.write("\tplanner.deleteYN = pj.plannerDeleteYN;\r\n");
      out.write("\tplanner.expiry = pj.plannerExpiry;\r\n");
      out.write("\tplanner.count = pj.plannerCount;\r\n");
      out.write("\tplanner.url = pj.plannerUrl;\r\n");
      out.write("\tplanner.groupCode = pj.groupCode;\r\n");
      out.write("\tfor(var d in pj.days){\r\n");
      out.write("\t\tvar day = new Object();\r\n");
      out.write("\t\tday.no = pj.days[d].dateNo;\r\n");
      out.write("\t\tday.tripDate = pj.days[d].tripDate;\r\n");
      out.write("\t\tday.plannerNo = planner.no;\r\n");
      out.write("\t\tday.schedules = new Array();\r\n");
      out.write("\t\tvar scheduleMarker = new Array();\r\n");
      out.write("\t\tfor(var s in pj.days[d].schedules){\r\n");
      out.write("\t\t\tvar schedule = new Object();\r\n");
      out.write("\t\t\tschedule.no = pj.days[d].schedules[s].scheduleNo;\r\n");
      out.write("\t\t\tschedule.title = pj.days[d].schedules[s].scheduleTitle;\r\n");
      out.write("\t\t\tschedule.cost = pj.days[d].schedules[s].scheduleCost;\r\n");
      out.write("\t\t\tschedule.time = pj.days[d].schedules[s].scheduleTime;\r\n");
      out.write("\t\t\tschedule.memo = pj.days[d].schedules[s].scheduleMemo;\r\n");
      out.write("\t\t\tschedule.locationNM = pj.days[d].schedules[s].scheduleLocationNM;\r\n");
      out.write("\t\t\tschedule.lat = pj.days[d].schedules[s].scheduleLat;\r\n");
      out.write("\t\t\tschedule.lng = pj.days[d].schedules[s].scheduleLng;\r\n");
      out.write("\t\t\tschedule.infoWindow = pj.days[d].schedules[s].infoWindow;\r\n");
      out.write("\t\t\tschedule.dateNo = pj.days[d].dateNo;\r\n");
      out.write("\t\t\tday.schedules.push(schedule);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//페이지 로딩 시 일정 수에 맞게 위치정보 Array에 자리생성\r\n");
      out.write("\t\t\t// 0 = schedule 번호\r\n");
      out.write("\t\t\t// 1 = 카카오 위치 객체\r\n");
      out.write("\t\t\t// 2 = lat + lng\r\n");
      out.write("\t\t\t// 3 = 인포 윈도우\r\n");
      out.write("\t\t\tscheduleLatLng = new kakao.maps.LatLng(schedule.lat,schedule.lng)\r\n");
      out.write("\t\t\tscheduleMarker.push({\"sno\" : schedule.no, \"LatLng\" : scheduleLatLng, \"unselect\" : (scheduleLatLng.getLat()+scheduleLatLng.getLng()==0?true:false), \"infoWindow\" : null}); \r\n");
      out.write("\r\n");
      out.write("\t\t\tloadingInfo += 1;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tgetScheduleAddr(scheduleLatLng,schedule.locationNM,schedule.no).then(function(args){\r\n");
      out.write("\t\t\t\tfor(var i in scheduleMarkers){\r\n");
      out.write("\t\t\t\t\tfor(var j in scheduleMarkers[i].scheduleMarker){\r\n");
      out.write("\t\t\t\t\t\tif(scheduleMarkers[i].scheduleMarker[j].sno == args[0]){\r\n");
      out.write("\t\t\t\t\t\t\tscheduleMarkers[i].scheduleMarker[j].infoWindow = args[1];\r\n");
      out.write("\t\t\t\t\t\t\tloadingAddr += 1;\r\n");
      out.write("\t\t\t\t\t\t\tif(loadingInfo == loadingAddr){\r\n");
      out.write("\t\t\t\t\t\t\t\tfor(var k = 0; k < days.length; k++){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcreateDate(days[k].no,false);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\treorder();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tscheduleMarkers.push({\"dno\" : day.no, \"scheduleMarker\" : scheduleMarker});\r\n");
      out.write("\t\tdays.push(day);\r\n");
      out.write("\t}\r\n");
      out.write("\t//setTimeout(function(){\r\n");
      out.write("\tfor(var i = 0; i < days.length; i++){\r\n");
      out.write("\t\tsortSchedules(days[i].schedules);\r\n");
      out.write("\t}\r\n");
      out.write("\tconsole.log(\"planner\");\r\n");
      out.write("\tconsole.log(planner);\r\n");
      out.write("\tconsole.log(\"days\");\r\n");
      out.write("\tsortDaysUserTripdate(days);\r\n");
      out.write("\tconsole.log(days);\r\n");
      out.write("\tconsole.log(\"scheduleMarkers\");\r\n");
      out.write("\tconsole.log(scheduleMarkers);\r\n");
      out.write("\t//}, 1000);\r\n");
      out.write("}\r\n");
      out.write("function initChatting(chatList){\r\n");
      out.write("\tfor(var i in chatList){\r\n");
      out.write("\t\tif(chatList[i].memberNo == '-1'){\r\n");
      out.write("\t\t\tinputChat(mkChatMsg('null','비회원',chatList[i].chatContent,chatList[i].chatTime));\r\n");
      out.write("\t\t}else if(chatList[i].memberNo == memberNo) {\r\n");
      out.write("\t     \t// inputChat = 채팅 내역에 채팅창 올리는 함수\r\n");
      out.write("\t        // mkMyChatMsg = 내가 보낸 메세지로 채팅창 만드는 함수\r\n");
      out.write("\t        // mkMyChatMsg 매개변수 = (msgContent,msgTime)\r\n");
      out.write("\t        inputChat(mkMyChatMsg(chatList[i].chatContent,chatList[i].chatTime));\r\n");
      out.write("\t\t}else {\r\n");
      out.write("\t\t\t// inputChat = 채팅 내역에 채팅창 올리는 함수\r\n");
      out.write("\t        // mkChatMsg = 다른사람이 보낸 메세지로 채팅창 만드는 함수\r\n");
      out.write("\t        // mkChatMsg 매개변수 = (profileImg,memberNo,msgContent,msgTime)\r\n");
      out.write("\t        inputChat(mkChatMsg(chatList[i].imagePath,chatList[i].memberNickName,chatList[i].chatContent,chatList[i].chatTime));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//====================================== 변환 관련 함수  ======================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("function timeToTime(time){\r\n");
      out.write("\tif(!time.includes(':')){\r\n");
      out.write("\t\tvar str = time.replace(/(.{2})/g,\"$1:\").slice(0,-1);\r\n");
      out.write("\t\treturn str;\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\treturn time;\r\n");
      out.write("\t}\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//====================================== 정렬 관련 함수  ======================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("function sortSchedules(schedules){\r\n");
      out.write("\tvar dno = schedules[0].dateNo;\r\n");
      out.write("\tvar dayIdx = -1;\r\n");
      out.write("\tvar i = null;\r\n");
      out.write("\tvar j = null;\r\n");
      out.write("\tfor(i in scheduleMarkers){\r\n");
      out.write("\t\tif(scheduleMarkers[i].dno == dno)\r\n");
      out.write("\t\t\tdayIdx = i;\r\n");
      out.write("\t}\r\n");
      out.write("\ttry{\r\n");
      out.write("\t\tfor(i = schedules.length-1; i > 0; i--){\r\n");
      out.write("\t        for(j = 0; j < i; j++){\r\n");
      out.write("\t        \tif(schedules[j+1].time < schedules[j].time){\r\n");
      out.write("\t                var temp = schedules[j];\r\n");
      out.write("\t                var mTemp = scheduleMarkers[dayIdx].scheduleMarker[j];\r\n");
      out.write("\t                schedules[j] = schedules[j+1];\r\n");
      out.write("\t                scheduleMarkers[dayIdx].scheduleMarker[j]=scheduleMarkers[dayIdx].scheduleMarker[j+1]\r\n");
      out.write("\t                schedules[j+1] = temp;\r\n");
      out.write("\t                scheduleMarkers[dayIdx].scheduleMarker[j+1] = mTemp;\r\n");
      out.write("\t            }   \r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}catch(e){\r\n");
      out.write("\t\tconsole.log('정렬오류 발생' + e.stack);\r\n");
      out.write("\t\tconsole.log('error : i = ' + i + ', j = ' + j + ', idx : ' + dayIdx);\r\n");
      out.write("\t\tconsole.log(scheduleMarkers[dayIdx]);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function sortSchedule(){\r\n");
      out.write("    var scheduleArr = $(\".schedule\");\r\n");
      out.write("    \r\n");
      out.write("  \t//scheduleMarkers에서 ($('#selectedDay').data('dateno'))에 해당하는 날짜의 데이터를  daySchedule에 저장\r\n");
      out.write("    var daySchedule = extractDayMarker($('#selectedDay').data('dateno'));\r\n");
      out.write("  \r\n");
      out.write("    for(var i = scheduleArr.length-1; i > 0; i--){\r\n");
      out.write("        for(var j = 0; j < i; j++){\r\n");
      out.write("            if($(scheduleArr[j+1]).find(\".scheduleTime\").val() \r\n");
      out.write("            < $(scheduleArr[j]).find(\".scheduleTime\").val()){\r\n");
      out.write("                var temp = scheduleArr[j];\r\n");
      out.write("                var tempSchedule = daySchedule.scheduleMarker[j];\r\n");
      out.write("                scheduleArr[j] = scheduleArr[j+1];\r\n");
      out.write("                daySchedule.scheduleMarker[j] = daySchedule.scheduleMarker[j+1];\r\n");
      out.write("                scheduleArr[j+1] = temp;\r\n");
      out.write("                daySchedule.scheduleMarker[j+1] = tempSchedule;\r\n");
      out.write("            }   \r\n");
      out.write("        }\r\n");
      out.write("    } \r\n");
      out.write("    \r\n");
      out.write("    $('#scheduleList').html('');\r\n");
      out.write("    $(scheduleArr).each(function(i, arr){\r\n");
      out.write("        $('#scheduleList').append(arr);\r\n");
      out.write("    });\r\n");
      out.write("    var locationArr = new Array();\r\n");
      out.write("    var infoWindowArr = new Array()\r\n");
      out.write("    displayAllPlaces(daySchedule,allMap,allMarkers);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function sortDays(days){\r\n");
      out.write("\tfor(var i = days.length-1; i > 0; i--){\r\n");
      out.write("        for(var j = 0; j < i; j++){\r\n");
      out.write("            if(days[j+1].tripDate < days[j].tripDate){\r\n");
      out.write("                var temp = days[j];\r\n");
      out.write("                days[j] = days[j+1];\r\n");
      out.write("                days[j+1] = temp;\r\n");
      out.write("            }   \r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function sortDaysUserTripdate(){\r\n");
      out.write("\tvar tempDays = new Array();\r\n");
      out.write("\tfor(var i in days){\r\n");
      out.write("\t\tfor(var j in days){\r\n");
      out.write("\t\t\tif(parseInt(days[j].tripDate,10) == i){\r\n");
      out.write("\t\t\t\ttempDays.push(days[j]);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tdays = tempDays;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function sortDaysUseDateNo(orderDate){\r\n");
      out.write("\tvar tempDays = new Array();\r\n");
      out.write("\tfor(var i in orderDate){\r\n");
      out.write("\t\tfor(var j in days){\r\n");
      out.write("\t\t\ttry{\r\n");
      out.write("\t\t\t\tif(days[j] != undefined){\r\n");
      out.write("\t\t\t\t\tif(orderDate[i].dno == days[j].no){\r\n");
      out.write("\t\t\t\t\t\tdays[j].tripDate = orderDate[i].order;\r\n");
      out.write("\t\t\t\t\t\ttempDays.push(days[j]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}catch(e){\r\n");
      out.write("\t\t\t\tconsole.log(e.stack);\r\n");
      out.write("\t\t\t\tconsole.log('i : ' + i + ', j : ' + j);\r\n");
      out.write("\t\t\t\tconsole.log(orderDate[i]);\r\n");
      out.write("\t\t\t\tconsole.log(days[j]);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tdays = tempDays;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//일차 정렬하여 몇일차인지 텍스트 바꿔줌\r\n");
      out.write("function reorder() {\r\n");
      out.write("\tvar dateInfo = new Array();\r\n");
      out.write("    $(\".daystyle\").each(function(i, box) {\r\n");
      out.write("    \tvar dno = $(box).data('dateno');\r\n");
      out.write("        $(box).find(\".dayCount\").html(i + 1 + \"일차\");\r\n");
      out.write("        var before = $(box).data('dateorder')\r\n");
      out.write("        $(box).data('dateorder',i);\r\n");
      out.write("        dateInfo.push({order:i,dno:$(box).data('dateno')});\r\n");
      out.write("    });\r\n");
      out.write("    //sock.send로 afterDayOrder 보내줌\r\n");
      out.write("\tsock.send(JSON.stringify({pno:planner.no, type: 'orderDate', id: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.getMemberEmail()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", dateInfo:dateInfo}));\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//====================================== 지도 관련 함수  ======================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("function getScheduleAddr(templocation,locationName,scheduleNo){\r\n");
      out.write("\tif(templocation.getLng() + templocation.getLat() != 0){\r\n");
      out.write("\t\treturn new Promise(function(resolve, reject){\r\n");
      out.write("\t\t\ttry{\r\n");
      out.write("\t\t\t\tvar contentArr= new Array();\r\n");
      out.write("\t\t\t\tcontentArr.push(scheduleNo);\r\n");
      out.write("\t\t\t\tsearchDetailAddrFromCoords(templocation, function(result, status) {\r\n");
      out.write("\t\t\t\t    if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\t\t\t\t        var detailAddr = !!result[0].road_address ? '<div style=\"font-size: 14px;\">도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';\r\n");
      out.write("\t\t\t\t        detailAddr += '<div style=\"font-size: 14px;\">지번 주소 : ' + result[0].address.address_name + '</div>';\r\n");
      out.write("\t\t\t\t        \r\n");
      out.write("\t\t\t        \tcontent = \t'<div class=\"bAddr\">' +\r\n");
      out.write("\t\t\t\t                        '<span class=\"title\">' + locationName + '</span>' + \r\n");
      out.write("\t\t\t\t                        detailAddr + \r\n");
      out.write("\t\t\t                        '</div>';\r\n");
      out.write("\t\t\t\t      \tcontentArr.push(content);\r\n");
      out.write("\t\t\t\t        resolve(contentArr);\r\n");
      out.write("\t\t\t\t    }else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n");
      out.write("\t\t\t\t        // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n");
      out.write("\t\t\t\t\t    content = \r\n");
      out.write("\t\t\t\t\t    \t'<div class=\"bAddr\">' +\r\n");
      out.write("\t\t                        '<span class=\"title\">' + locationName + '</span>' + \r\n");
      out.write("\t\t                    '</div>';\r\n");
      out.write("\t\t\t\t\t    contentArr.push(content);\r\n");
      out.write("\t\t\t\t        resolve(contentArr);\r\n");
      out.write("\t\t\t\t    } else if (status === kakao.maps.services.Status.ERROR) {\r\n");
      out.write("\t\t\t\t        // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n");
      out.write("\t\t\t\t    \tconsole.log(\"에러로 인해 검색결과가 나오지 않은 경우\");\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t} catch(error){\r\n");
      out.write("\t\t\t\tconsole.log(error.stack);\r\n");
      out.write("\t\t\t\treject(error)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\treturn new Promise(function(resolve, reject){\r\n");
      out.write("\t\t\ttry{\r\n");
      out.write("\t\t\t\tvar contentArr= new Array();\r\n");
      out.write("\t\t\t\tcontentArr.push(scheduleNo);\r\n");
      out.write("\t\t\t\tcontentArr.push(null);\r\n");
      out.write("\t\t\t\tresolve(contentArr);\r\n");
      out.write("\t\t\t}catch(error){\r\n");
      out.write("\t\t\t\tconsole.log(error.stack);\r\n");
      out.write("\t\t\t\treject(error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("//scheduleMarkers에서 dno에 해당하는 날짜의 데이터를 반환\r\n");
      out.write("function extractDayMarker(dno){\r\n");
      out.write("\tfor(var i = 0; i < scheduleMarkers.length; i++){\r\n");
      out.write("\t\tif(scheduleMarkers[i].dno == dno){\r\n");
      out.write("\t\t\treturn scheduleMarkers[i];\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//scheduleMarkers에서 dno에 해당하는 날짜의 sno에 해당하는 인덱스 반환\r\n");
      out.write("function extractScheduleMarker(dno,sno){\r\n");
      out.write("\tvar dayMarker = extractDayMarker(dno);\r\n");
      out.write("\tvar scheMarker = null;\r\n");
      out.write("\tfor(var i in dayMarker.scheduleMarker){\r\n");
      out.write("\t\tif(dayMarker.scheduleMarker[i].sno == sno)\r\n");
      out.write("\t\t\tscheMarker = i;\r\n");
      out.write("\t}\r\n");
      out.write("\treturn scheMarker;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//====================================== Day 관련 함수 ======================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("//일차 추가하는 함수\r\n");
      out.write("// 매개변수 dateNo = PLANNER_DATE 테이블의 DATE_NO값을 넣어야함\r\n");
      out.write("var tempDayno = 100;\r\n");
      out.write("\r\n");
      out.write("function addDate(){\r\n");
      out.write("\t// date_no는 DB 에서 가져옴\r\n");
      out.write("\tif(permission > 1)\r\n");
      out.write("\t\tsock.send(JSON.stringify({pno:planner.no, type: 'addDate', id: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.getMemberEmail()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"}));\r\n");
      out.write("\telse\r\n");
      out.write("\t\talert('권한이 없습니다.');\r\n");
      out.write("\t// trip_date 값은  reorder에서 수정\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function createDate(dateNo,reorderBoolean){\r\n");
      out.write("\r\n");
      out.write("\tdayIndex++;\r\n");
      out.write("\t\r\n");
      out.write("\tfor(var i in days){\r\n");
      out.write("\t\tif (days[i].no == dateNo){\r\n");
      out.write("\t\t\tdayIndex = days[i].tripDate;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("    // 일차 만드는 HTML코드, dayInd는 테스트용이고 dateNo로 바꿔줘야함\r\n");
      out.write("    var dayForm = \r\n");
      out.write("    '<div data-dateorder=\"' + dayIndex + '\" data-dateno=\"' + dateNo + '\" id=\"days\" class=\"daystyle\" onclick=\"selectDay(' + dateNo + ');\">' +\r\n");
      out.write("    '<span class=\"dayCount pl-2\">' + (parseInt(dayIndex,10) + 1) + '일차</span>' +\r\n");
      out.write("    '<button type=\"button\" class=\"dayDeleteBtn btnColor3\" onclick=\"deleteDay(' + dateNo + ');\">-</button>' +\r\n");
      out.write("    '</div>';\r\n");
      out.write("\r\n");
      out.write("    // 일차 목록에 추가함\r\n");
      out.write("    $(\"#sortable\").append(dayForm)\r\n");
      out.write("\t\r\n");
      out.write("    // 추가하고 정렬(몇일차인지 계산해서 텍스트 바꿔줌)\r\n");
      out.write("    if(reorderBoolean)\r\n");
      out.write("   \t\treorder();\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//일차 선택하는 함수\r\n");
      out.write("function selectDay(no){\r\n");
      out.write("\r\n");
      out.write("    // 매개변수로 받은 인덱스로 div를 찾아 저장할 변수\r\n");
      out.write("    var selectedDay;\r\n");
      out.write("\r\n");
      out.write("    // .daystyle 속성을 가진 요소들의 배열중\r\n");
      out.write("    // ind와 같은 번호의 요소를 selectedDay에 저장\r\n");
      out.write("    $('.daystyle').each(function(i, box) {\r\n");
      out.write("        if($(box).data('dateno') == no)\r\n");
      out.write("            selectedDay = box;\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 몇일차인지 찾아서 바꿔줌\r\n");
      out.write("    $('#selectedDay').html($(selectedDay).find('span').html());\r\n");
      out.write("    $('#selectedDay').data('dateno',no)\r\n");
      out.write("\r\n");
      out.write("    // 여기서 data('dateno')=DATE_NO 조건을 만족하는 행을 가져와 일정 목록에 추가하면서\r\n");
      out.write("    // scheduleMarkers을 scheduleMarkers = new Array(new Array(), new Array());로 초기화\r\n");
      out.write("    // scheduleMarkers[0] 에 add()함수를 이용하여 SCHEDULE_NO를 추가\r\n");
      out.write("    // scheduleMarkers[1] 에 좌표 두개를 카카오맵 객체로 묶어서 add() 해야함\r\n");
      out.write("    $(\"#scheduleList\").html('');\r\n");
      out.write("    \r\n");
      out.write("    var existMarker = false;\r\n");
      out.write("    var todayMarker = null;\r\n");
      out.write("    for(var i = 0; i < days.length; i++){\r\n");
      out.write("    \tif(days[i].no == no){\r\n");
      out.write("    \t\tfor(var j = 0; j < days[i].schedules.length; j++){\r\n");
      out.write("    \t\t\tvar sno = days[i].schedules[j].no;\r\n");
      out.write("    \t\t\tvar stitle = days[i].schedules[j].title;\r\n");
      out.write("    \t\t\tvar stime = timeToTime(days[i].schedules[j].time);\r\n");
      out.write("    \t\t\tvar scost = days[i].schedules[j].cost;\r\n");
      out.write("    \t\t\tvar smemo = days[i].schedules[j].memo;\r\n");
      out.write("    \t\t\tvar slocationName = days[i].schedules[j].locationNM;\r\n");
      out.write("   \t\t\t\tcreateSchedule(sno,stitle,stime,scost,smemo,slocationName);\r\n");
      out.write("   \t\t\t\ttodayMarker = extractDayMarker(no);\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t}\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    sortSchedule();\r\n");
      out.write("    for(var i in days){\r\n");
      out.write("    \tif(days[i].no == no)\r\n");
      out.write("    \t\tsortSchedules(days[i].schedules);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("\tfor(var i in todayMarker.scheduleMarker){\r\n");
      out.write("\t\tif(!todayMarker.scheduleMarker[i].unselect)\r\n");
      out.write("\t\t\texistMarker = true;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tif(existMarker){\r\n");
      out.write("\t\tdisplayAllPlaces(extractDayMarker(no),allMap,allMarkers);\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tallMap = new kakao.maps.Map(allMapContainer, mapOption);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tinitMapBtn();\r\n");
      out.write("\t\tremoveAllMarker();\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("    infowindowAll.close();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//일차 제거하는 함수\r\n");
      out.write("function deleteDay(ind){\r\n");
      out.write("\tif(permission > 1){\r\n");
      out.write("\t\tif(days.length > 1){\r\n");
      out.write("\t\t\tsock.send(JSON.stringify({pno:planner.no, type: 'deleteDate', id: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.getMemberEmail()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", dno:ind}));\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert('삭제 실패');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\talert('권한이 없습니다.');\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function deleteDate(ind,reorderBool){\r\n");
      out.write("\tdayIndex--;\r\n");
      out.write("    $(\".daystyle\").each(function(i, box) {\r\n");
      out.write("        if($(box).data(\"dateno\")==ind)\r\n");
      out.write("            $(box).remove();\r\n");
      out.write("    });\r\n");
      out.write("    if(reorderBool)\r\n");
      out.write("    \treorder();\r\n");
      out.write("    selectDay($($(\".daystyle\").get(0)).data('dateno'));\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//==================================== Schedule 관련 함수 ===================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("//일정 만드는 코드 반환하는 함수\r\n");
      out.write("//첫번째 매개변수는 SCHEDULE 테이블에서 SCHEDULE_NO값이 들어가야 하는데\r\n");
      out.write("//새로운 일정을 만드는 것이니 시퀀스 NEXTVAL 얻어와서 넣어야함\r\n");
      out.write("function createSchedule(no,title,time,cost,memo,locationName){\r\n");
      out.write("\tvar schedule = \r\n");
      out.write("\t'<div data-scheduleno=\"' + no + '\" class=\"btn p-cont schedule\" onclick=\"selectSchedule(' + no + ')\">' +\r\n");
      out.write("\t'<div class=\"row font-weight-bold accodianElement mb-1\">' +\r\n");
      out.write("\t'<div class=\"col-md-8\">' +\r\n");
      out.write("\t'<h1 class=\"scheduleTitle\">' + title + '</h1>' +\r\n");
      out.write("\t'</div>' +\r\n");
      out.write("\t'<div class=\"col-md-3\">' +\r\n");
      out.write("\t'<h3><input type=\"time\" value=\"' + time + '\" class=\"disableInput scheduleTime\" disabled></h3>' +\r\n");
      out.write("\t'</div>' +\r\n");
      out.write("\t'<div class=\"col-md-1 toggleArrow\" onclick=\"toggleArrow(this)\">▼</div>' +\r\n");
      out.write("\t'</div>' +\r\n");
      out.write("\t'<div style=\"display:none\">' +\r\n");
      out.write("\t'<h4 class=\"mb-4 mt-4 scheduleLocation\">' + locationName + '</h4>' +\r\n");
      out.write("\t'<h4 class=\"mb-4 \">경비 : <span class=\"scheduleCost\">' + cost + '</span>원</h4>' +\r\n");
      out.write("\t'<h4 class=\"mb-3 \">메모 내용</h4>' +\r\n");
      out.write("\t'<h5 class=\"pl-3 scheduleMemo\">' + memo + '</h5>' +\r\n");
      out.write("\t'</div>' +\r\n");
      out.write("\t'<hr class=\"mt-4 mb-3\">' +\r\n");
      out.write("\t'</div>';\r\n");
      out.write("\t$(\"#scheduleList\").append(schedule);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var tempScheduleNo = 100;\r\n");
      out.write("//일정 추가하는 함수\r\n");
      out.write("\r\n");
      out.write("$('#addSchedule').click(function(){\r\n");
      out.write("\tvar dno = $('#selectedDay').data('dateno');\r\n");
      out.write("\tvar title = $('#inputScheduleTitle').val();\r\n");
      out.write("    var time = $('#inputScheduleTime').val();\r\n");
      out.write("    var cost = $('#inputScheduleCost').val();\r\n");
      out.write("    var memo = $('#inputScheduleMemo').val();\r\n");
      out.write("    var location = $('#inputScheduleLocationName').val();\r\n");
      out.write("    \r\n");
      out.write("    if(dno == 0){\r\n");
      out.write("\t\talert('일자를 선택해주세요');\r\n");
      out.write("\t}else if(title == ''){\r\n");
      out.write("        alert('제목을 입력해주세요');\r\n");
      out.write("    }else if(lat + lng == 0){\r\n");
      out.write("        alert('위치를 선택해주세요');\r\n");
      out.write("    }else if(time == ''){\r\n");
      out.write("        alert('시간을 입력해주세요');\r\n");
      out.write("    }else if(location == ''){\r\n");
      out.write("        alert('장소 이름을 입력해주세요');\r\n");
      out.write("    }else{\r\n");
      out.write("    \tif(permission > 1){\r\n");
      out.write("\t    \tsock.send(JSON.stringify({pno:planner.no, type: 'addSchedule', id: memberNo,\r\n");
      out.write("\t    \t\tdno: dno, title: title, time: time, location: location, cost: cost, memo: memo, lat: lat, lng: lng, iwContent: iwContent}));\r\n");
      out.write("    \t}\r\n");
      out.write("   \t\telse\r\n");
      out.write("   \t\t\talert('권한이 없습니다.');\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function addSchedule(dno,sno,title,time,location,cost,memo,llat,llng,liwContent,lmemberNo){\r\n");
      out.write("\t\r\n");
      out.write("    // 새로운 일정을 만드는 것이니 시퀀스 NEXTVAL 얻어와서 넣어야함\r\n");
      out.write("    // 테스트때 임시로 createNo 변수 사용\r\n");
      out.write("    var dayIdx;\r\n");
      out.write("\r\n");
      out.write("\tfor(var i in days){\r\n");
      out.write("\t\tif(days[i].no == dno){\r\n");
      out.write("\t\t\tdays[i].schedules.push({no:sno, title:title, cost:cost, time:removeColonFromTime(time), memo:memo})\r\n");
      out.write("\t\t\tdayIdx = i;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t// 마커 배열에 새로운 자리를 만듦\r\n");
      out.write("\tvar today = extractDayMarker(dno);\r\n");
      out.write("\tvar locationLatLng = new kakao.maps.LatLng(llat,llng)\r\n");
      out.write("\ttoday.scheduleMarker.push({\"sno\" : sno, \"LatLng\" : locationLatLng, \"unselect\" : (llat+llng==0?true:false), \"infoWindow\" : liwContent});\r\n");
      out.write("\t\r\n");
      out.write("\tif($('#selectedDay').data('dateno') == dno){\r\n");
      out.write("\t\tcreateSchedule(sno,title,time,cost,memo,location);\r\n");
      out.write("\t\tif(memberNo == lmemberNo)\r\n");
      out.write("\t\t\tselectSchedule(sno);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function selectScheduleNofromDays(no){\r\n");
      out.write("\tvar dayIdx = -1;\r\n");
      out.write("\tvar scheIdx = -1;\r\n");
      out.write("\tif(dayIdx == -1){\r\n");
      out.write("\t\tfor(var i in days){\r\n");
      out.write("\t\t\tfor(var j in days[i].schedules){\r\n");
      out.write("\t\t\t\tif(days[i].schedules[j].no == no){\r\n");
      out.write("\t\t\t\t\tdayIdx = i;\r\n");
      out.write("\t\t\t\t\tscheIdx = j;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$('.schedule').each(function(i, item){\r\n");
      out.write("\t\tif($(item).data('scheduleno') == no){\r\n");
      out.write("\t\t\tscheDiv = item; \r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("    return new Array(dayIdx, scheIdx);\r\n");
      out.write("}\r\n");
      out.write("function selectScheduleNo(no){\r\n");
      out.write("\tvar dayIdx = -1;\r\n");
      out.write("\tvar scheIdx = -1;\r\n");
      out.write("\tvar scheDiv = null;\r\n");
      out.write("\tif(dayIdx == -1){\r\n");
      out.write("\t\tfor(var i in scheduleMarkers){\r\n");
      out.write("\t\t\tfor(var j in scheduleMarkers[i].scheduleMarker){\r\n");
      out.write("\t\t\t\tif(scheduleMarkers[i].scheduleMarker[j].sno == no){\r\n");
      out.write("\t\t\t\t\tdayIdx = i;\r\n");
      out.write("\t\t\t\t\tscheIdx = j;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$('.schedule').each(function(i, item){\r\n");
      out.write("\t\tif($(item).data('scheduleno') == no){\r\n");
      out.write("\t\t\tscheDiv = item; \r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("    return new Array(dayIdx, scheIdx, scheDiv);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function selectSchedule(no){\r\n");
      out.write("    \r\n");
      out.write("\tvar scheInfo = selectScheduleNo(no);\r\n");
      out.write("\t\r\n");
      out.write("    $('#inputScheduleTitle').val($(scheInfo[2]).find(\".scheduleTitle\").html());\r\n");
      out.write("    $('#inputScheduleTime').val($(scheInfo[2]).find(\".scheduleTime\").val());\r\n");
      out.write("    $('#inputScheduleCost').val($(scheInfo[2]).find(\".scheduleCost\").html());\r\n");
      out.write("    $('#inputScheduleMemo').val($(scheInfo[2]).find(\".scheduleMemo\").html());\r\n");
      out.write("    $('#inputScheduleLocationName').val($(scheInfo[2]).find(\".scheduleLocation\").html());\r\n");
      out.write("    $('#scheduleInfo').data('scheduleno',no);\r\n");
      out.write("\r\n");
      out.write("    if(!scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].unselect){\r\n");
      out.write("        allMap.panTo(scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].LatLng);\r\n");
      out.write("        map.panTo(scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].LatLng);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // marker.setPosition(mouseEvent.latLng);\r\n");
      out.write("    // marker.setMap(map);\r\n");
      out.write("    \r\n");
      out.write("    initMarker(scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].LatLng,scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].infoWindow);\r\n");
      out.write("    lat = scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].LatLng.getLat();\r\n");
      out.write("    lng = scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].LatLng.getLng();\r\n");
      out.write("    iwContent = scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].infoWindow;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("function updateSchedule(sno,title,time,location,cost,memo,llat,llng,liwContent){\r\n");
      out.write("\t\r\n");
      out.write("\tvar scheInfo = selectScheduleNo(sno);\r\n");
      out.write("\tvar scheduleIdx = selectScheduleNofromDays(sno);\r\n");
      out.write("\t\r\n");
      out.write("\t$(scheInfo[2]).find(\".scheduleTitle\").html(title);\r\n");
      out.write("\t$(scheInfo[2]).find(\".scheduleTime\").val(time);\r\n");
      out.write("\t$(scheInfo[2]).find(\".scheduleLocation\").html(location);\r\n");
      out.write("\t$(scheInfo[2]).find(\".scheduleCost\").html(cost);\r\n");
      out.write("\t$(scheInfo[2]).find(\".scheduleMemo\").html(memo);\r\n");
      out.write("\t\r\n");
      out.write("\tscheduleLatLng = new kakao.maps.LatLng(llat, llng);\r\n");
      out.write("\tscheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].LatLng = scheduleLatLng;\r\n");
      out.write("\tscheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].unselect = llat + llng == 0 ?true:false;\r\n");
      out.write("\tscheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].infoWindow = liwContent;\r\n");
      out.write("\t\r\n");
      out.write("\tdays[scheduleIdx[0]].schedules[scheduleIdx[1]].title = title;\r\n");
      out.write("\tdays[scheduleIdx[0]].schedules[scheduleIdx[1]].time = time;\r\n");
      out.write("\tdays[scheduleIdx[0]].schedules[scheduleIdx[1]].location = location;\r\n");
      out.write("\tdays[scheduleIdx[0]].schedules[scheduleIdx[1]].cost = cost;\r\n");
      out.write("\tdays[scheduleIdx[0]].schedules[scheduleIdx[1]].memo = memo;\r\n");
      out.write("\tdays[scheduleIdx[0]].schedules[scheduleIdx[1]].lat = llat;\r\n");
      out.write("\tdays[scheduleIdx[0]].schedules[scheduleIdx[1]].lng = llng;\r\n");
      out.write("\t\r\n");
      out.write("\tsortSchedule();\r\n");
      out.write("\t\r\n");
      out.write("\tscheInfo = selectScheduleNo($('#scheduleInfo').data('scheduleno'));\r\n");
      out.write("\t// initMarker(scheduleMarkers[1][dupIdx], scheduleMarkers[3][dupIdx]);\r\n");
      out.write("\tinitMarker(scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].LatLng, scheduleMarkers[scheInfo[0]].scheduleMarker[scheInfo[1]].infoWindow);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$('#scheduleUpdate').click(function(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar sno = $('#scheduleInfo').data('scheduleno');\r\n");
      out.write("   \tvar title = $('#inputScheduleTitle').val();\r\n");
      out.write("    var time = $('#inputScheduleTime').val();\r\n");
      out.write("    var location = $('#inputScheduleLocationName').val();\r\n");
      out.write("    var cost = $('#inputScheduleCost').val();\r\n");
      out.write("    var memo = $('#inputScheduleMemo').val();\r\n");
      out.write("\t\r\n");
      out.write("\tif(sno == 0){\r\n");
      out.write("        alert('일정을 선택해주세요');\r\n");
      out.write("    }else if(title == ''){\r\n");
      out.write("        alert('제목을 입력해주세요');\r\n");
      out.write("    }else if(lat + lng == 0){\r\n");
      out.write("        alert('위치를 선택해주세요');\r\n");
      out.write("    }else if(time == ''){\r\n");
      out.write("        alert('시간을 입력해주세요');\r\n");
      out.write("    }else if(location == ''){\r\n");
      out.write("    \talert('장소를 입력해주세요');\r\n");
      out.write("    }else{\r\n");
      out.write("    \tif(permission > 1){\r\n");
      out.write("\t    \tsock.send(JSON.stringify({pno:planner.no, type: 'updateSchedule', id: memberNo,\r\n");
      out.write("\t    \t\tsno: sno, title: title, time: time, location: location, cost: cost, memo: memo, lat: lat, lng: lng, iwContent: iwContent}));\r\n");
      out.write("    \t}\r\n");
      out.write("   \t\telse\r\n");
      out.write("   \t\t\talert('권한이 없습니다.');\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function removeSchedule(dno,sno){\r\n");
      out.write("\r\n");
      out.write("\tfor(var i in scheduleMarkers){\r\n");
      out.write("    \tif(scheduleMarkers[i].dno == dno){\r\n");
      out.write("    \t\tfor(var j in scheduleMarkers[i].scheduleMarker){\r\n");
      out.write("    \t\t\tif(scheduleMarkers[i].scheduleMarker[j].sno == sno){\r\n");
      out.write("    \t\t\t\tscheduleMarkers[i].scheduleMarker.splice(j,1);\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t}\r\n");
      out.write("    }\r\n");
      out.write("    for(var i in days){\r\n");
      out.write("    \tif(days[i].no == dno){\r\n");
      out.write("    \t\tfor(var j in days[i].schedules){\r\n");
      out.write("    \t\t\tif(days[i].schedules[j].no == sno){\r\n");
      out.write("    \t\t\t\tdays[i].schedules.splice(j,1);\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t}\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("\t// #selectedDay의 data('dateno')값이 dno와 같으면 .schedule 중에 data('scheduleno')가 sno와 같은 div 삭제\r\n");
      out.write("\tif($('#selectedDay').data('dateno') == dno){\r\n");
      out.write("\t\t$('.schedule').each(function(i, item){\r\n");
      out.write("\t\t\tif($(item).data('scheduleno') == sno){\r\n");
      out.write("\t\t\t\t$(item).remove();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("    \r\n");
      out.write("\tsortSchedule();\r\n");
      out.write("    for(var i in days){\r\n");
      out.write("    \tif(days[i].no == dno)\r\n");
      out.write("    \t\tsortSchedules(days[i].schedules);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$('#removeSchedule').click(function(){\r\n");
      out.write("    if($('#scheduleInfo').data('scheduleno')==0){\r\n");
      out.write("        alert('일정을 선택해주세요');\r\n");
      out.write("    } else {\r\n");
      out.write("    \tvar dayIdx = -1;\r\n");
      out.write("    \tvar sno = $('#scheduleInfo').data('scheduleno');\r\n");
      out.write("    \tvar dno = $('#selectedDay').data('dateno');\r\n");
      out.write("    \tfor(var i in days){\r\n");
      out.write("    \t\tif(days[i].no == dno)\r\n");
      out.write("    \t\t\tdayIdx = i;\r\n");
      out.write("    \t}\r\n");
      out.write("    \tif(permission > 1){\r\n");
      out.write("    \t\tif(days[dayIdx].schedules.length > 1)\r\n");
      out.write("\t\t    \tsock.send(JSON.stringify({pno:planner.no, type: 'removeSchedule', id: memberNo,\r\n");
      out.write("\t\t    \t\tdno: dno, sno: sno}));\r\n");
      out.write("    \t\telse\r\n");
      out.write("    \t\t\talert('삭제 실패');\r\n");
      out.write("    \t}\r\n");
      out.write("   \t\telse\r\n");
      out.write("   \t\t\talert('권한이 없습니다.');\r\n");
      out.write("    \t\r\n");
      out.write("    \t$('#inputScheduleTitle').val('');\r\n");
      out.write("        $('#inputScheduleTime').val('');\r\n");
      out.write("        $('#inputScheduleCost').val('');\r\n");
      out.write("        $('#inputScheduleMemo').val('');\r\n");
      out.write("        $('#inputScheduleLocationName').val('');\r\n");
      out.write("        $('#scheduleInfo').data('scheduleno',0);\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//==================================== Websocket 관련 함수 ==================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("//웹소켓을 지정한 url로 연결한다.\r\n");
      out.write("let sock = new SockJS(\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\");\r\n");
      out.write("sock.onmessage = onMessage;\r\n");
      out.write("sock.onclose = onClose;\r\n");
      out.write("\r\n");
      out.write("// 서버로부터 메시지를 받았을 때\r\n");
      out.write("function onMessage(msg) {\r\n");
      out.write("\tvar jsonData = msg.data;\r\n");
      out.write("\tvar data = JSON.parse(jsonData);\r\n");
      out.write("\tswitch(data['type']){\r\n");
      out.write("\tcase 'msg':\r\n");
      out.write("\t\tif(data['memberNo'] == '-1'){\r\n");
      out.write("\t\t\tinputChat(mkChatMsg('null','비회원',data['content'],data['time']));\r\n");
      out.write("\t\t}else if(data['memberNo'] == memberNo){\r\n");
      out.write("\t     \t// inputChat = 채팅 내역에 채팅창 올리는 함수\r\n");
      out.write("\t        // mkMyChatMsg = 내가 보낸 메세지로 채팅창 만드는 함수\r\n");
      out.write("\t        // mkMyChatMsg 매개변수 = (msgContent,msgTime)\r\n");
      out.write("\t        inputChat(mkMyChatMsg(data['content'],data['time']));\r\n");
      out.write("\t\t}else {\r\n");
      out.write("\t\t\t// inputChat = 채팅 내역에 채팅창 올리는 함수\r\n");
      out.write("\t        // mkChatMsg = 다른사람이 보낸 메세지로 채팅창 만드는 함수\r\n");
      out.write("\t        // mkChatMsg 매개변수 = (profileImg,memberNo,msgContent,msgTime)\r\n");
      out.write("\t        inputChat(mkChatMsg(data['imagePath'],data['memberNickName'],data['content'],data['time']));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'addDate': \r\n");
      out.write("\t\tdays.push({no:data['dno'],tripDate:-1,plannerNo:planner.no,schedules:new Array()});\r\n");
      out.write("\t\tscheduleMarkers.push({dno:data['dno'],scheduleMarker:new Array()});\r\n");
      out.write("\t\tcreateDate(data['dno'],(data['id'] == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'));\r\n");
      out.write("\t\taddSchedule(data['dno'],data['sno'],'제목 없음','','미정',0,'',0,0,null,memberNo);\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'deleteDate': \r\n");
      out.write("\t\tdeleteDate(data['dno'],(data['id'] == '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'));\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'updateSchedule':\r\n");
      out.write("\t\tupdateSchedule(data['sno'],data['title'],data['time'],data['location'],data['cost'],data['memo'],data['lat'],data['lng'],data['iwContent'])\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'addSchedule': \r\n");
      out.write("\t\taddSchedule(data['dno'],data['sno'],data['title'],data['time'],data['location'],data['cost'],data['memo'],data['lat'],data['lng'],data['iwContent'],memberNo)\r\n");
      out.write("\t\tsortSchedule(data['sno']);\r\n");
      out.write("\t    for(var i in days){\r\n");
      out.write("\t    \tif(days[i].no == data['dno']){\r\n");
      out.write("\t    \t\tsortSchedules(days[i].schedules);\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'removeSchedule': \r\n");
      out.write("\t\tremoveSchedule(data['dno'],data['sno']);\r\n");
      out.write("\t\tsortSchedule(data['sno']);\r\n");
      out.write("\t    for(var i in days){\r\n");
      out.write("\t    \tif(days[i].no == data['dno']){\r\n");
      out.write("\t    \t\tsortSchedules(days[i].schedules);\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'JOIN':\r\n");
      out.write("\t\tvar dupCheck = false;\r\n");
      out.write("\t\tfor(var i in joinMember){\r\n");
      out.write("\t\t\tif(joinMember[i].memberNo == data['newJoinUser'].memberNo)\r\n");
      out.write("\t\t\t\tdupCheck = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!dupCheck){\r\n");
      out.write("\t\t\tif(data['newJoinUser'] != undefined)\r\n");
      out.write("\t\t\t\tjoinMember.push(data['newJoinUser']);\r\n");
      out.write("\t\t\ttry{\r\n");
      out.write("\t\t\t\tvar userOption = \r\n");
      out.write("\t\t\t\t\t'<option value=\"' + data['newJoinUser'].memberNo + '\">' + data['newJoinUser'].memberNickName + '</option>'\r\n");
      out.write("\t\t\t\t$('#userPermission').append(userOption);\r\n");
      out.write("\t\t\t}catch(e){\r\n");
      out.write("\t\t\t\te.stack;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'permission':\r\n");
      out.write("\t\tgrantPermission(data['grantMemberNo'],data['permission']);\r\n");
      out.write("\t\tif(data['grantMemberNo'] == memberNo){\r\n");
      out.write("\t\t\tpermission = data['permission'];\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'sumCost':\r\n");
      out.write("\t\t$('#totalcost').html(data['content'] + '원');\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'orderDate':\r\n");
      out.write("\t\tsortDaysUseDateNo(data['dateInfo']);\r\n");
      out.write("\t\t$('#sortable').html('');\r\n");
      out.write("\t\tfor(var i in days){\r\n");
      out.write("\t\t\tcreateDate(days[i].no,false);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor(var i in days){\r\n");
      out.write("\t\t\tif(days[i].no == $('#selectedDay').data('dateno')){\r\n");
      out.write("\t\t\t\t$('#selectedDay').html((parseInt(days[i].tripDate,10) + 1 )+'일차');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'startDate':\r\n");
      out.write("\t\t$('#startrip').val(data['content']);\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'updatePublic':\r\n");
      out.write("\t\tplanner.publicYN = data['publicYN'];\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'clearUserList':\r\n");
      out.write("\t\tinitJoinMember(data['joinUserArray']);\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 'locationList':\r\n");
      out.write("\t\tinitLocationList(JSON.parse(data['locationList']));\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 서버와 연결을 끊었을 때\r\n");
      out.write("function onClose(evt) {\r\n");
      out.write("\t$(\"#data\").append(\"연결 끊김\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//====================================== 채팅 관련 함수  ======================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("// 다른사람이 보낸 채팅 메세지 만들어서 리턴하는 함수\r\n");
      out.write("function mkChatMsg(profileImg,userId,msgContent,msgTime){\r\n");
      out.write("\t\r\n");
      out.write("\tvar imagePath = null;\r\n");
      out.write("\t\r\n");
      out.write("\tif(profileImg.includes('http')){\r\n");
      out.write("\t\timagePath = profileImg;\r\n");
      out.write("\t}else if(profileImg == 'null'){\r\n");
      out.write("\t\timagePath = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/default-profile.png'\r\n");
      out.write("\t}else if(profileImg == ''){\r\n");
      out.write("\t\timagePath = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/default-profile.png'\r\n");
      out.write("\t}else {\r\n");
      out.write("\t\timagePath = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources' + profileImg.substring(profileImg.indexOf('/'));\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("    var chatMsg =\r\n");
      out.write("    '<div class=\"chatbox overhidden\">' +\r\n");
      out.write("    '<div>' +\r\n");
      out.write("    '<img src = \"' + imagePath + '\" class=\"profileImg\">' +\r\n");
      out.write("    '<span class=\"userId\">' + userId + '</span>' +\r\n");
      out.write("    '</div>' +\r\n");
      out.write("    '<div>' +\r\n");
      out.write("    '<div class=\"message\">' +\r\n");
      out.write("    '<span>' + msgContent + '</span>' +\r\n");
      out.write("    '</div>' +\r\n");
      out.write("    '<span class=\"messageTime\">' + msgTime + '</span>' +\r\n");
      out.write("    '</div>' +\r\n");
      out.write("    '</div>';\r\n");
      out.write("\r\n");
      out.write("    return chatMsg;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 내가 보낸 채팅 메세지 만들어서 리턴하는 함수\r\n");
      out.write("function mkMyChatMsg(msgContent,msgTime){\r\n");
      out.write("    var myChatMsg =\r\n");
      out.write("    // '<div class=\"myChatbox\">' +\r\n");
      out.write("    // '<span class=\"messageTime\">' + msgTime + '</span>' +\r\n");
      out.write("    // '<span class=\"myMessage\">' + msgContent + '</span>' +\r\n");
      out.write("    // '</div>';\r\n");
      out.write("    '<div class=\"myChatbox overhidden\">' +\r\n");
      out.write("    '<div class=\"myMessage\">' +\r\n");
      out.write("    '<span>' + msgContent + '</span>' +\r\n");
      out.write("    '</div>' +\r\n");
      out.write("    '<div>' +\r\n");
      out.write("    '<span class=\"myMessageTime\">' + msgTime + '</span>' +\r\n");
      out.write("    '</div>' +\r\n");
      out.write("    '</div>';\r\n");
      out.write("        \r\n");
      out.write("    return myChatMsg;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 채팅내역에 채팅창 추가하는 함수( 매개변수 msg = 채팅창)\r\n");
      out.write("function inputChat(msg){\r\n");
      out.write("    var $chatArea = $(\".chatarea\")\r\n");
      out.write("    $chatArea.append(msg);\r\n");
      out.write("\r\n");
      out.write("    // 스크롤 자동으로 아래로 내려주는 함수\r\n");
      out.write("    $chatArea.scrollTop($chatArea.prop(\"scrollHeight\"));\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//======================================== 권한 함수 ========================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("function initJoinMember(joinUserArray){\r\n");
      out.write("\tjoinMember = new Array();\r\n");
      out.write("\t$('#userPermission option').remove();\r\n");
      out.write("\t\r\n");
      out.write("\tvar color = null;\r\n");
      out.write("\tvar icon = '';\r\n");
      out.write("\tvar i = 0;\r\n");
      out.write("\tvar j = 0;\r\n");
      out.write("\twhile(i < joinUserArray.length){\r\n");
      out.write("\t\tif(joinUserArray[i].memberNo != -1){\r\n");
      out.write("\t\t\tjoinMember.push(joinUserArray[i]);\r\n");
      out.write("\t\t\tj++;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ti++;\r\n");
      out.write("\t}\r\n");
      out.write("\tfor(var i = 0; i < joinMember.length; i++){\r\n");
      out.write("\t\ticon = '';\r\n");
      out.write("\t\tswitch(joinMember[i].plannerPermission){\r\n");
      out.write("\t\t\tcase '1':\tcolor = '#C8FFFF';\tbreak;\r\n");
      out.write("\t\t\tcase '2':\tcolor = '#32F1FF';\ticon = '☆';\tbreak;\r\n");
      out.write("\t\t\tcase '3':\tcolor = '#0AC9FF';\ticon = '★';\tbreak;\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t\tvar userOption = \r\n");
      out.write("\t\t\t'<option style=\"background:' + color + '\" value=\"' + joinMember[i].memberNo + '\">' + joinMember[i].memberNickName + icon + '</option>'\r\n");
      out.write("\t\t$('#userPermission').append(userOption);\r\n");
      out.write("\t}\r\n");
      out.write("\t// <option value=\"memberNo\">닉네임 <option>\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$('#grantBtn').click(function(){\r\n");
      out.write("\tvar grantMemberNo = $('#userPermission').val();\r\n");
      out.write("\tif(permission > 2)\r\n");
      out.write("\t\tsock.send(JSON.stringify({pno:planner.no, type: 'permission', memberNo: memberNo, permission: '2', grantMemberNo:grantMemberNo}));\r\n");
      out.write("\telse\r\n");
      out.write("\t\talert('권한이 없습니다.');\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$('#stealBtn').click(function(){\r\n");
      out.write("\tvar grantMemberNo = $('#userPermission').val();\r\n");
      out.write("\tvar userIndex = -1;\r\n");
      out.write("\tfor(var i in joinUserJson){\r\n");
      out.write("\t\tif(joinUserJson[i].memberNo == grantMemberNo)\r\n");
      out.write("\t\t\tuserIndex = i;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif(permission > 2){\r\n");
      out.write("\t\tif(joinUserJson[userIndex].plannerPermission != 3){\r\n");
      out.write("\t\t\tsock.send(JSON.stringify({pno:planner.no, type: 'permission', memberNo: memberNo, permission: '1', grantMemberNo:grantMemberNo}));\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert('방장의 권한을 삭제할 수 없습니다.');\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}else\r\n");
      out.write("\t\talert('권한이 없습니다.');\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 매개변수로 받은 멤버 넘버의 권한을 매개변수로 받은 permission으로 바꿈\r\n");
      out.write("function grantPermission(grantMemberNo,permission){\r\n");
      out.write("\tfor(var i in joinMember){\r\n");
      out.write("\t\tif(joinMember[i].memberNo == grantMemberNo){\r\n");
      out.write("\t\t\tjoinMember[i].plannerPermission = permission;\r\n");
      out.write("\t\t\tchangePermissionColor(i);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function changePermissionColor(i){\r\n");
      out.write("\tjoinMember[i].memberNo;\r\n");
      out.write("\tvar color = '#C8FFFF';\r\n");
      out.write("\tvar icon = '';\r\n");
      out.write("\tswitch(joinMember[i].plannerPermission){\r\n");
      out.write("\t\tcase '1':\tcolor = '#C8FFFF';\tbreak;\r\n");
      out.write("\t\tcase '2':\tcolor = '#32F1FF';\ticon = '☆';\tbreak;\r\n");
      out.write("\t\tcase '3':\tcolor = '#0AC9FF';\ticon = '★';\tbreak;\r\n");
      out.write("\t}\t\t\r\n");
      out.write("\t$('option').each(function(j,item){\r\n");
      out.write("\t\tif(joinMember[i].memberNo == $(item).attr('value')){\r\n");
      out.write("\t\t\t$(item).attr('style','background:' + color + ';');\r\n");
      out.write("\t\t\t$(item).html(joinMember[i].memberNickName+icon);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//======================================== 기타 함수 ========================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("$(function () {\r\n");
      out.write("        \r\n");
      out.write("    // 복사 버튼 클릭 시 페이지 url 클립보드에 복사\r\n");
      out.write("    $(\"#copy\").on(\"click\", function () {\r\n");
      out.write("        var urlbox = document.getElementById('url');\r\n");
      out.write("        urlbox.select();\r\n");
      out.write("        document.execCommand('Copy');\r\n");
      out.write("        alert('URL 이 복사 되었습니다.');\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 내가 쓴 채팅 보내는 함수\r\n");
      out.write("    $(\"#send\").click(function(){\r\n");
      out.write("        // 채팅 입력창 내용 변수에 저장\r\n");
      out.write("        var msg = document.getElementById(\"mymsg\").value;\r\n");
      out.write("        msg = msg.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n");
      out.write("        \r\n");
      out.write("        // 채팅 입력창 비어있지 않으면 실행\r\n");
      out.write("        if(msg != '' && msg != '<br/>'){\r\n");
      out.write("            sock.send(JSON.stringify({pno:planner.no, type: 'msg', memberNo: memberNo, memberNickName: memberNickName, content: msg, imagePath:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profilePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'}));\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 메세지 전송 후 채팅 입력창 비워줌\r\n");
      out.write("        $('#mymsg').val('');\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 일차 마우스로 이동 가능하게 하고 정렬하는 함수\r\n");
      out.write("    $(\"#sortable\").disableSelection();\r\n");
      out.write("    $(\"#sortable\").sortable({\r\n");
      out.write("        placeholder:\".daystyleHighlight\",\r\n");
      out.write("        // 드래그 시작했을 때 작동\r\n");
      out.write("        start: function(event, ui) {\r\n");
      out.write("        \tif(permission < 2)\r\n");
      out.write("        \t\talert('권한이 없습니다');\r\n");
      out.write("        \telse\r\n");
      out.write("            \tui.item.data('start_pos', ui.item.index());\r\n");
      out.write("        },\r\n");
      out.write("        // 드래그 끝났을 때 작동\r\n");
      out.write("        stop: function(event, ui) {\r\n");
      out.write("            var spos = ui.item.data('start_pos');\r\n");
      out.write("            var epos = ui.item.index();\r\n");
      out.write("            // 일차 정렬하는 함수\r\n");
      out.write("            reorder();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#mymsg').keyup(function (evt) {\r\n");
      out.write("    \tif (evt.keyCode == 13 && !evt.shiftKey) {\r\n");
      out.write("    \t    $('#send').click();\r\n");
      out.write("    \t}else if(evt.keyCode == 13 && evt.shiftKey){\r\n");
      out.write("    \t\t$('#send').val($('#send').val()+'<br>');\r\n");
      out.write("    \t}\r\n");
      out.write("    \tif($('#mymsg').val().length > 100){\r\n");
      out.write("    \t\talert('100글자를 초과하여 입력할 수 없습니다');\r\n");
      out.write("    \t\t$('#mymsg').val($('#mymsg').val().substring(0,100));\r\n");
      out.write("    \t}\r\n");
      out.write("    });\r\n");
      out.write("    $('#calc').click(function(){\r\n");
      out.write("    \tif(permission > 1)\r\n");
      out.write("    \t\tsock.send(JSON.stringify({pno:planner.no, type: 'sumCost', memberNo: memberNo, content: calculator()}));\r\n");
      out.write("    \telse\r\n");
      out.write("    \t\talert('권한이 없습니다');\r\n");
      out.write("    })\r\n");
      out.write("    \r\n");
      out.write("    $('#startDateUpdateBtn').click(function(){\r\n");
      out.write("    \tif(permission > 1)\r\n");
      out.write("\t    \tsock.send(JSON.stringify({pno:planner.no, type: 'startDate', memberNo: memberNo, content: $('#startrip').val()}));\r\n");
      out.write("    \telse\r\n");
      out.write("    \t\talert('권한이 없습니다');\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#inputScheduleTitle').keyup(function(){\r\n");
      out.write("    \tif($('#inputScheduleTitle').val().length > 20){\r\n");
      out.write("    \t\talert('20글자를 초과하여 입력할 수 없습니다');\r\n");
      out.write("    \t\t$('#inputScheduleTitle').val($('#inputScheduleTitle').val().substring(0,20));\r\n");
      out.write("    \t}\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#inputScheduleCost').keyup(function(){\r\n");
      out.write("    \tif($('#inputScheduleCost').val().length > 9){\r\n");
      out.write("    \t\talert('돈을 너무 막씁니다');\r\n");
      out.write("    \t\t$('#inputScheduleCost').val($('#inputScheduleCost').val().substring(0,9));\r\n");
      out.write("    \t}\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#inputScheduleMemo').keyup(function(){\r\n");
      out.write("    \tif($('#inputScheduleCost').val().length > 200){\r\n");
      out.write("    \t\talert('200글자를 초과하여 입력할 수 없습니다');\r\n");
      out.write("    \t\t$('#inputScheduleCost').val($('#inputScheduleCost').val().substring(0,200));\r\n");
      out.write("    \t}\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#inputScheduleLocationName').keyup(function(){\r\n");
      out.write("    \tif($('#inputScheduleLocationName').val().length > 20){\r\n");
      out.write("    \t\talert('20글자를 초과하여 입력할 수 없습니다');\r\n");
      out.write("    \t\t$('#inputScheduleLocationName').val($('#inputScheduleLocationName').val().substring(0,20));\r\n");
      out.write("    \t}\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("\t$('#updateTitle').click(function(){\r\n");
      out.write("    \tvar inputTitle = prompt('변경할 제목을 입력해주세요');\r\n");
      out.write("    \tif(inputTitle != ''){\r\n");
      out.write("    \t\tsock.send(JSON.stringify({pno:planner.no, type: 'updateTitle', memberNo: memberNo, title: inputTitle}));\r\n");
      out.write("    \t}else{\r\n");
      out.write("    \t\talert('제목을 입력하지 않으셨습니다');\r\n");
      out.write("    \t}\r\n");
      out.write("    });\r\n");
      out.write("\t$('#updatePassword').click(function(){\r\n");
      out.write("\t\tvar inputPwd1 = prompt('변경할 비밀번호를 입력해주세요');\r\n");
      out.write("\t\tif(inputPwd1 == '' || inputPwd1 == 'null' || inputPwd1 == null){\r\n");
      out.write("\t\t\tsock.send(JSON.stringify({pno:planner.no, type: 'updatePassword', memberNo: memberNo, pwd: ''}));\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tvar inputPwd2 = prompt('비밀번호를 다시 입력해주세요');\r\n");
      out.write("\t    \tif(inputPwd1 == inputPwd2){\r\n");
      out.write("\t    \t\tsock.send(JSON.stringify({pno:planner.no, type: 'updatePassword', memberNo: memberNo, pwd: inputPwd1}));\r\n");
      out.write("\t    \t}else\r\n");
      out.write("\t    \t\talert('입력한 두 비밀번호가 다릅니다');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t$('#updateLocation').click(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$('#updatePublic').click(function(){\r\n");
      out.write("\t\tvar str = \"비공개\"\r\n");
      out.write("\t\tvar publicYN = 'N';\r\n");
      out.write("\t\tif(planner.publicYN == 'N'){\r\n");
      out.write("\t\t\tstr = \"공개\"\r\n");
      out.write("\t\t\tpublicYN = 'Y';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(confirm('플래너 상태를 ' + str + '로 전환하시겠습니까?')){\r\n");
      out.write("\t\t\tsock.send(JSON.stringify({pno:planner.no, type: 'updatePublic', memberNo: memberNo, publicYN: publicYN}));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('#clearUserList').click(function(){\r\n");
      out.write("\t\tif(confirm('접속자 목록을 초기화 하시겠습니까?')){\r\n");
      out.write("\t\t\tsock.send(JSON.stringify({pno:planner.no, type: 'clearUserList', memberNo: memberNo}));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$('#updateGroup').click(function(){\r\n");
      out.write("\t\tplanner.groupCode = $('#groupCode').val();\r\n");
      out.write("\t\tsock.send(JSON.stringify({pno:planner.no, type:'updateGroup', gco:$('#groupCode').val()}));\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('#guide').click(function(){\r\n");
      out.write("\t\twindow.open(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/planner/guide\",'_blank');\r\n");
      out.write("\t})\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 경비 총액 계산 후 리턴\r\n");
      out.write("function calculator(){\r\n");
      out.write("\tvar totalCost = 0;\r\n");
      out.write("\tvar expensive = '';\r\n");
      out.write("\tfor(var i in days){\r\n");
      out.write("\t\tfor(var j in days[i].schedules){\r\n");
      out.write("\t\t\ttotalCost += parseInt(days[i].schedules[j].cost,10);\r\n");
      out.write("\t\t\tif(parseInt(days[i].schedules[j].cost,10) > 100000000){\r\n");
      out.write("\t\t\t\texpensive += '\\n' + days[i].schedules[j].title;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tif(totalCost > 2000000000){\r\n");
      out.write("\t\talert('과도한 지출은 통장건강에 해롭습니다\\n\\n통장건강에 해로운 일정 목록' + expensive);\r\n");
      out.write("\t\ttotalCost = 0;\r\n");
      out.write("\t}\r\n");
      out.write("\treturn totalCost;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 뒤로가기 하는 함수(참여 모달창의 이전으로 버튼에 사용)\r\n");
      out.write("function goBack(){\r\n");
      out.write("    history.go(-1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function initMapBtn(){\r\n");
      out.write("\tvar sl = new kakao.maps.LatLng(0,0);\r\n");
      out.write("\tinitMarker(sl,null);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function removeColonFromTime(time){\r\n");
      out.write("\treturn time.replace(':','');\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("// 일정목록의 삼각형 클릭하면 일정 자세히 보여주면서 삼각형 모양 바꿔주는 함수\r\n");
      out.write("function toggleArrow(e){\r\n");
      out.write("    if(!$(e).parent().next().is(\":visible\"))\r\n");
      out.write("    {\r\n");
      out.write("        $(e).parent().next().slideDown();\r\n");
      out.write("        $(e).html(\"▲\");\r\n");
      out.write("    }else{\r\n");
      out.write("        $(e).parent().next().slideUp();\r\n");
      out.write("        $(e).html(\"▼\");\r\n");
      out.write("    }\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("//====================================== 지역리스트 함수 ======================================//\r\n");
      out.write("//=======================================================================================//\r\n");
      out.write("\r\n");
      out.write("//지역 선택\r\n");
      out.write("$(\"#wide-area\").on(\"change\", function(){\r\n");
      out.write("    var wideVal = Number($(this).val());\r\n");
      out.write("    var html = \"\";\r\n");
      out.write("\r\n");
      out.write("    switch(wideVal){\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    $(\"#local-area\").html(html);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$('#locationAdd').click(function(){\r\n");
      out.write("\tvar locationDup = locationEqual($('#wide-area').val(),$('#local-area').val());\r\n");
      out.write("\tif(locationDup == undefined){\r\n");
      out.write("\t\taddLocationList($('#wide-area').val(),$('#wide-area option[value='+$('#wide-area').val()+']').html(),\r\n");
      out.write("\t\t\t\t$('#local-area').val(),$('#local-area option[value='+$('#local-area').val()+']').html())\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\talert('같은 장소를 중복해서 선택할 수 없습니다');\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function addLocationList(lc,ln,sc,sn){\r\n");
      out.write("\t\r\n");
      out.write("\tvar locationName = ln + ' - ' + sn\r\n");
      out.write("\tvar locationDiv =\r\n");
      out.write("\t'<div class=\"row mb-2 locationDiv\">' +\r\n");
      out.write("\t'<div class=\"col-10\">' +\r\n");
      out.write("\t'<span class=\"custom-select\" style=\"background:white\">' + locationName + '</span>' +\r\n");
      out.write("\t'</div>' +\r\n");
      out.write("\t'<div class=\"col-2\">' +\r\n");
      out.write("\t'<button data-large=\"' + lc + '\" data-small=\"' + sc + '\" type=\"button\"' +\r\n");
      out.write("\t'class=\"btn btn-block btn-danger\" onclick=\"removeLocation(this);\">-</button>' +\r\n");
      out.write("\t'</div>' +\r\n");
      out.write("\t'</div>';\r\n");
      out.write("\tif(locationList.length < 5){\r\n");
      out.write("\t\t//console.log(\"large : \" + lc + \", small : \" + sc);\r\n");
      out.write("\t\tlocationList.push({large:lc,largeNM:ln,small:sc,smallNM:sn});\r\n");
      out.write("\t\t$('#locationList').append(locationDiv);\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\talert('지역을 더이상 추가할 수 없습니다');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function removeLocation(location){\r\n");
      out.write("\tlocationList.splice(locationEqual($('#wide-area').val(),$('#local-area').val()),1);\r\n");
      out.write("\t$(location).parent().parent().remove();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function locationEqual(lc, sc){\r\n");
      out.write("\tfor(var i in locationList){\r\n");
      out.write("\t\tif(locationList[i].large == lc && locationList[i].small == sc)\r\n");
      out.write("\t\t\treturn i;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$('#updateLocation').click(function(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar locationJson = JSON.stringify(locationList);\r\n");
      out.write("\tsock.send(JSON.stringify({pno:planner.no, type:'locationList', locationList:locationList}));\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("function initLocationList(tempList){\r\n");
      out.write("\r\n");
      out.write("\tlocationList = new Array();\r\n");
      out.write("\t$('#locationList').html('');\r\n");
      out.write("\t\r\n");
      out.write("\tfor(var i in tempList){\r\n");
      out.write("\t\taddLocationList(tempList[i].large,tempList[i].largeNM,tempList[i].small,tempList[i].smallNM);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/planner/editPlanner.jsp(126,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("largeArea");
      // /WEB-INF/views/planner/editPlanner.jsp(126,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/planner/editPlanner.jsp(126,8) '${largeNmList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${largeNmList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/planner/editPlanner.jsp(126,8) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${largeArea.largeAreaCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${largeArea.largeAreaName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/planner/editPlanner.jsp(495,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("areaName");
      // /WEB-INF/views/planner/editPlanner.jsp(495,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/planner/editPlanner.jsp(495,2) '${areaNameList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${areaNameList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/planner/editPlanner.jsp(495,2) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\ttempList.push({large:'");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${areaName.largeAreaCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',largeNM:'");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${areaName.largeAreaName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',\r\n");
            out.write("\t\t\t\tsmall:'");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${areaName.smallAreaCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',smallNM:'");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${areaName.smallAreaName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'});\r\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/planner/editPlanner.jsp(1241,23) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/echo");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/views/planner/editPlanner.jsp(1715,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("largeArea");
      // /WEB-INF/views/planner/editPlanner.jsp(1715,1) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/planner/editPlanner.jsp(1715,1) '${largeNmList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${largeNmList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/planner/editPlanner.jsp(1715,1) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\tcase ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${largeArea.largeAreaCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" : \r\n");
            out.write("\t\t");
            if (_jspx_meth_c_005fforEach_005f3(_jspx_th_c_005fforEach_005f2, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f2))
              return true;
            out.write("break;\r\n");
            out.write("\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f2)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f3_reused = false;
    try {
      _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f2);
      // /WEB-INF/views/planner/editPlanner.jsp(1717,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setVar("smallArea");
      // /WEB-INF/views/planner/editPlanner.jsp(1717,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/planner/editPlanner.jsp(1717,2) '${smallNmList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${smallNmList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/planner/editPlanner.jsp(1717,2) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
        if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
              return true;
            out.write("\r\n");
            out.write("    \t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
      _jspx_th_c_005fforEach_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f3);
      // /WEB-INF/views/planner/editPlanner.jsp(1718,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${smallArea.largeAreaCode eq largeArea.largeAreaCode}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("    \t\t\thtml += \"<option value='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${smallArea.smallAreaCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('\'');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${smallArea.smallAreaName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</option>\";\r\n");
          out.write("    \t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
